{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4127f7aafda53781b468","webpack:///./src/node/NodeAbstract.ts","webpack:///./src/util.ts","webpack:///./src/confNode.ts","webpack:///./src/node/NodeUtil.ts","webpack:///./src/NodeQue.ts","webpack:///./src/browser.FlowEditor.umd.ts","webpack:///external \"raphael\"","webpack:///./src/WorkerEditor.ts","webpack:///./src/helper.ts","webpack:///./node_modules/process/browser.js","webpack:///./version.ts","webpack:///./src/ToolBar.ts","webpack:///./src/node/NodeBegin.ts","webpack:///./src/node/NodeTask.ts","webpack:///./src/node/NodeAudit.ts","webpack:///./src/node/NodeSign.ts","webpack:///./src/node/NodeCond.ts","webpack:///./src/node/NodeSubFlow.ts","webpack:///./src/node/NodeParallel.ts","webpack:///./src/node/NodeMerge.ts","webpack:///./src/node/NodeEnd.ts","webpack:///./src/node/NodeLn.ts","webpack:///./src/node/NodeLnPoly.ts","webpack:///./src/node/NodeText.ts","webpack:///./src/ObjX.ts"],"names":[],"mappings":"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AG,GAAV,UAAW,KAAa,EAAE,GAAQ,EAAE,KAAW;QAC3C,IAAG,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC;YACtB,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE;SAC7B;QACD,IAAI,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC;QAC9B,IAAG,WAAW,IAAI,OAAO,GAAG,EAAC;YACzB,OAAO,EAAE;SACZ;QACD,IAAG,WAAW,IAAI,OAAO,KAAK,EAAC;YAC3B,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI;SACzB;QACD,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK;IACnB,CAAC;IACL,QAAC;AAAD,CAAC;AAED,yDAAe,CAAC;;;;;;;;AC9EhB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,q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","file":"./build/FlowEditor.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"raphael\")) : factory(root[\"raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4127f7aafda53781b468","/**\r\n * 2018年3月26日 星期一\r\n * 抽象节点\r\n */\r\n///<reference path=\"../../index.d.ts\"/>\r\n///<reference path=\"../types/raphael.ts\"/>\r\n///<reference path=\"../types/jquery.ts\"/>\r\n\r\n// declare var $: jQuery\r\n// declare var $: jquery\r\n    // BUG[180331]  <reference path=\"../types/jquery.ts\"/> 无效\r\ndeclare var $: any\r\nimport { Util } from \"../util\"\r\nimport {cNode} from '../confNode'\r\nimport NodeUtil from \"./NodeUtil\";\r\n\r\n\r\n/**\r\n * @export\r\n * @abstract\r\n * @class NodeAbstract\r\n */\r\nexport default abstract class NodeAbstract{\r\n    conLns: {\r\n        from?: string[]    // [code: string] \r\n        to?: string[]\r\n    }\r\n    NodeType: string            // 节点类型\r\n    opt: rSu.NodeOpt            // 节点选项\r\n    label?: RaphaelElement      // 标签元素\r\n    c?: RaphaelElement          // 容器元素\r\n    paper: RaphaelPaper         // Raphael 绘制对象器\r\n    isSelEd: boolean            // 选中标记\r\n\r\n    // 审核、合并\r\n    xRate?: number           // 移除边框百分比\r\n    inlinesEle?: RaphaelElement[]    // 合并\r\n    inlineEle?: RaphaelElement // 并行\r\n    tRElem: rSu.MapRElm        // 临时类集合\r\n    protected _dataQueueDick: rSu.bsMap\r\n    protected _code: string\r\n\r\n    constructor(paper: RaphaelPaper, opt?: rSu.NodeOpt){\r\n        this.conLns = {\r\n            from: [],\r\n            to: []\r\n        }\r\n        this.tRElem = {}\r\n        this._dataQueueDick = {}\r\n        this.isSelEd = false\r\n        this.paper = paper\r\n        this.NodeType = null            // 节点类型\r\n        // 传入属性时，设置目前的对象\r\n        if(opt){\r\n            opt.bkgMagnetic = opt.bkgMagnetic || '#FF0000'\r\n            let features = opt.features || {}\r\n            this.opt = opt\r\n        }        \r\n        this._onInit()\r\n    }    \r\n    /**\r\n     * 特征值处理\r\n     * @param {string|object} key \r\n     * @param {*} value \r\n     * @param {*} def  默认值，默认时会自动设置参数\r\n     */\r\n    feature(key: string|rSu.bsMap, value?: any, def?: any): rSu.Node|any{\r\n        let feature = this.opt.features || {}\r\n        if(!value){\r\n            if('object' == typeof key){\r\n                return null\r\n            }\r\n            let gValue = feature[key] || null\r\n            if(def && !gValue){\r\n                feature[key] = def\r\n                this.opt.features = feature\r\n                return def\r\n            }\r\n            return gValue\r\n        }else{\r\n            if('object' == typeof key){\r\n                feature = Util.jsonMerge(feature, key)\r\n            }\r\n            else{\r\n                feature[key] = value\r\n            }\r\n            this.opt.features = feature\r\n            return <rSu.Node>this\r\n        }\r\n    }\r\n    /**\r\n     * @param {string|number|object} key _code 特殊属性\r\n     * @param {*} value \r\n     */\r\n    data(key?:any, value?:any): any{        \r\n        if('undefined' == typeof value){\r\n            if('undefined' == typeof key){\r\n                return Util.clone(this._dataQueueDick)\r\n            }\r\n            else if('object' == typeof key){\r\n                Util.each(key, (k: any, v: any) => {\r\n                    this._dataQueueDick[k] = v\r\n                })\r\n                return this\r\n            }\r\n            return this._dataQueueDick[key]\r\n        }else{\r\n            this._dataQueueDick[key] = value\r\n            // 特殊处理，保持 code 只读，首次写入时保存\r\n            if(!this._code && key == '_code'){\r\n                this._code = value\r\n            }\r\n        }\r\n        return this\r\n    }\r\n    /**\r\n     * 获取代码，使之只读\r\n     */\r\n    get code():string{\r\n        return this._code\r\n    }\r\n    /**\r\n     * 获取 name 做处理判断\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof NodeAbstract\r\n     */\r\n    get name(): string{\r\n        let txt = this.opt.text || ''\r\n        if(txt && txt.indexOf('\\n') > -1){\r\n            txt = txt.replace(/\\n/g, '')\r\n        }\r\n        return txt\r\n    }\r\n    /**\r\n     * 键值， { cNode } = confNode 映射\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof NodeAbstract\r\n     */\r\n    get _key(): string{\r\n        let nt = this.NodeType\r\n        if(nt.indexOf('_') > -1){\r\n            let aStr = nt.split('_')\r\n            Util.each(aStr, (idx: number, v: string) => {\r\n                if(idx > 0){\r\n                    v = v.substr(0, 1).toLocaleUpperCase() + v.substr(1)\r\n                    aStr[idx] = v\r\n                }\r\n            })\r\n            nt = aStr.join('')\r\n        }\r\n        return nt\r\n    }\r\n    /**\r\n     * 获取类型\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof NodeAbstract\r\n     */\r\n    get type(): number{\r\n        let code = this.code,\r\n            attr = cNode[this._key],\r\n            tp: number = attr? attr.type : null\r\n        return tp\r\n    }\r\n    /**\r\n     * 节点生成器，外部可访问接口\r\n     * @param opt \r\n     */\r\n    creator(opt?: rSu.NodeOpt){\r\n        this._whenCreatorEvt()\r\n        return this\r\n    }\r\n    /**\r\n     * 点连线装换为path字符串\r\n     * @param {array} pQue \r\n     * @param {bool} isClose \r\n     * @returns {string}\r\n     */\r\n    protected _ps2Path(pQue: rSu.P[], isClose?: boolean): string{\r\n        return NodeUtil.ps2Path(pQue, isClose)\r\n    }\r\n    /**\r\n     * 点连线转换为字符串数组\r\n     * @param {array} pQue \r\n     * @param {bool} isClose \r\n     * @returns {string}\r\n     */\r\n    protected _ps2PathAttr(pQue: rSu.P[], isClose?: boolean){\r\n        return NodeUtil.ps2PathAttr(pQue, isClose)\r\n    }\r\n    /**\r\n     * 连线处理(记录)\r\n     * @param value 参数值\r\n     * @param isEnd \r\n     */\r\n    line(value: string, isEnd?: boolean): rSu.Node{\r\n        if(isEnd){\r\n            this.conLns.to.push(value)\r\n        }\r\n        else{\r\n            this.conLns.from.push(value)\r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 移除连接线\r\n     * @param type \r\n     * @param code \r\n     */\r\n    rmLine(value: string, isEnd?: boolean): rSu.Node{\r\n        if(value){\r\n            if(isEnd){\r\n                let tLns: string[] = []\r\n                Util.each(this.conLns.to, (k: number, code: string) => {\r\n                    if(code != value){\r\n                        tLns.push(code)\r\n                    }\r\n                })\r\n                this.conLns.to = tLns\r\n            }\r\n            else{\r\n                let fLns: string[] = []\r\n                Util.each(this.conLns.from, (k: number, code: string) => {\r\n                    if(code != value){\r\n                        fLns.push(code)\r\n                    }\r\n                })\r\n                this.conLns.from = fLns\r\n            }\r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 创建事件时，处理事件\r\n     */\r\n    protected _whenCreatorEvt(){}\r\n    /**\r\n     * 节点初始化 [接口]\r\n     */\r\n    protected _onInit(){}\r\n    /**\r\n     * 节点拖动以后处理，调用拖动以后 [接口]\r\n     */\r\n    onDrag(){}\r\n    /**\r\n     * 获取两点间的距离\r\n     */\r\n    getPLen(P1: rSu.P, P2: rSu.P): number{\r\n        return Math.pow(\r\n            (Math.pow((P1.x - P2.x), 2) + Math.pow((P1.y - P2.y), 2)),\r\n            1/2\r\n        )\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    protected _updAttr(nOpt: rSu.NodeOpt){\r\n        for(var key in nOpt){\r\n            if('undefined' != typeof this.opt[key]){\r\n                this.opt[key] = nOpt[key]\r\n            }\r\n        }\r\n        return this\r\n    }\r\n    /**\r\n     * 获取文本所在的位置\r\n     */\r\n    protected _getTextPnt(): rSu.P{\r\n        let {cx, cy} = this.opt,\r\n            p = {x: cx + 1, y: cy + 1}\r\n        return p\r\n    }\r\n    /**\r\n     * 节点删除\r\n     */\r\n    delete(){        \r\n        this.c.remove()\r\n        if(this.label){\r\n            this.label.remove()\r\n        }\r\n        if(this.inlineEle){\r\n            this.inlineEle.remove()\r\n        }\r\n        if(this.inlinesEle){\r\n            this.inlinesEle.forEach((ist: RaphaelElement) => {\r\n                ist.remove()\r\n            })\r\n        }\r\n        this.clearTmpElem()\r\n    }\r\n    /**\r\n     * 隐藏\r\n     */\r\n    hide(){\r\n        if(this.c){\r\n            this.c.hide()\r\n        }\r\n        if(this.label){\r\n            this.label.hide()\r\n        }\r\n        // 内部元素\r\n        if(this.inlinesEle){\r\n            this.inlinesEle.forEach((nd) => {\r\n                nd.hide()\r\n            })\r\n        }\r\n        if(this.inlineEle){\r\n            this.inlineEle.hide()\r\n        }\r\n        return this\r\n    }\r\n    /**\r\n     * 显示\r\n     */\r\n    show(){\r\n        if(this.c){\r\n            this.c.show()\r\n        }\r\n        if(this.label){\r\n            this.label.show()\r\n        }\r\n        // 内部元素\r\n        if(this.inlinesEle){\r\n            this.inlinesEle.forEach((nd) => {\r\n                nd.show()\r\n            })\r\n        }\r\n        if(this.inlineEle){\r\n            this.inlineEle.show()\r\n        }\r\n        return this\r\n    }\r\n    /**\r\n     * 节点可移动处理\r\n     * data => {afterUpd(x, y, $node), beforeMv($node)}\r\n     * @returns \r\n     * @memberof NodeAbstract\r\n     */\r\n    moveable(data?: rSu.bsMap): rSu.Node{\r\n        var $this = this;\r\n        data = 'object' == typeof data? data : {}\r\n        this.c.undrag()\r\n        var tP = {cx: 0, cy: 0}\r\n        this.c.drag(\r\n            function(dx: number, dy: number){\r\n                if(data.beforeMv && 'function' == typeof data.beforeMv){\r\n                    // 阻止移动\r\n                    if(false === data.beforeMv($this)){\r\n                        return\r\n                    }\r\n                }\r\n\r\n                dx += tP.cx\r\n                dy += tP.cy\r\n                $this.updAttr({cx: dx, cy: dy})\r\n                $this.select()\r\n                if(data.afterUpd && 'function' == typeof data.afterUpd){\r\n                    data.afterUpd(dx, dy, $this)\r\n                }\r\n            },\r\n            function(){\r\n                let {cx, cy} = $this.opt\r\n                tP = {cx, cy}\r\n            }\r\n        )\r\n        return <rSu.Node>$this\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        return <rSu.Node>this\r\n    }    \r\n    /**\r\n     * 文本属性更新\r\n     * \r\n     * @param {string} [text] \r\n     * @memberof NodeAbstract\r\n     */\r\n    updTextAttr(text?: string): rSu.Node{\r\n        let {x, y} = this._getTextPnt()\r\n        if(this.label){\r\n            this.label.attr({\r\n                x, y\r\n            })\r\n        }\r\n        // 生成文本\r\n        if(text){\r\n            if(this.label){\r\n                this.label.attr('text', text)\r\n            }else{\r\n                this.label = this.paper.text(x, y, text)\r\n            }\r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 获取处理以后的边框值\r\n     */\r\n    getBBox(): rSu.BoxAttr{\r\n        let {x, y, width, height} = this.c.getBBox(),\r\n            boxPadding = this.feature('boxPadding', null, 3)\r\n        x -= boxPadding, y -= boxPadding\r\n        width += boxPadding*2, height += boxPadding*2\r\n\r\n        // 顺时针： \r\n        let mx = x + width/2, \r\n            xx = x + width,\r\n            my = y + height/2,\r\n            xy = y + height,\r\n            ps: rSu.bsMap = {\r\n                a: {x, y},             // A\r\n                b: {x: mx, y},         // B\r\n                c: {x: xx, y},         // C\r\n                d: {x: xx, y: my},     // D\r\n                e: {x: xx, y: xy},     // E\r\n                f: {x: mx, y: xy},     // F\r\n                g: {x: x, y: xy},      // G\r\n                h: {x: x, y: my}       // H\r\n            }\r\n        let attr = {x, y, width, height}\r\n        return {attr, ps}\r\n    }\r\n    /**\r\n     * 获取 icon 坐标地址\r\n     */\r\n    getIconP(): rSu.P{\r\n        let p: rSu.P = this._getTextPnt(),\r\n            {w, h} = this.opt\r\n        p.x -= w/2 - 5\r\n        p.y -= h/2 - 5\r\n        return p\r\n    }\r\n    /**\r\n     * 磁化核心，基于碰撞以后的坐标点\r\n     * @param px\r\n     * @param py\r\n     */\r\n    magnCore(px: number, py: number): RaphaelElement{\r\n        let bAttr = this.getBBox(),\r\n            {attr, ps} = bAttr,\r\n            {x, y} = attr,\r\n            w = attr.width,\r\n            h = attr.height\r\n        // a-h\r\n        let pt: rSu.P,\r\n            cx1 = x + w/4,\r\n            cx = x + w/2,\r\n            cx2 = x + w*(3/4),\r\n            cy1 = y + w/4,\r\n            cy = y + w/2,\r\n            cy2 = y + w*(3/4),\r\n            posi = null\r\n\r\n        if(px <= cx1 && py <= cy1){\r\n            pt = ps.a\r\n            posi = 'a'\r\n        }\r\n        else if((px > cx1 && px < cx2) && py <= cy1){\r\n            pt = ps.b\r\n            posi = 'b'\r\n        }\r\n        else if((px >= cx2) && py <= cy1){\r\n            pt = ps.c\r\n            posi = 'c'\r\n        }\r\n        else if((px >= cx2) && (py > cy1 && py < cy2)){\r\n            pt = ps.d\r\n            posi = 'd'\r\n        }\r\n        else if((px >= cx2) && py >= cy2){\r\n            pt = ps.e\r\n            posi = 'e'\r\n        }\r\n        else if((px > cx1 && px < cx2) && py >= cy2){\r\n            pt = ps.f\r\n            posi = 'f'\r\n        }\r\n        else if((px <= cx1) && py >= cy2){\r\n            pt = ps.g\r\n            posi = 'g'\r\n        }\r\n        else if((px<= cx1) && (py > cy1 && py < cy2)){\r\n            pt = ps.h\r\n            posi = 'h'\r\n        }\r\n        this.clearTmpElem('mc')\r\n        if(pt){\r\n            this.tRElem['mc'] = this.paper\r\n                .circle(pt.x, pt.y, 3)\r\n                .attr('fill', this.opt.bkgMagnetic)\r\n                .data('pcode', this.code)\r\n                .data('posi', posi)\r\n        }\r\n        let rElem: RaphaelElement\r\n        if(this.tRElem['mc']){\r\n            rElem = this.tRElem['mc']\r\n        }\r\n        return rElem\r\n    }\r\n    /**\r\n     * [BUG20180417] 端点拖动以后报错： Uncaught TypeError: Cannot read property 'nextSibling' of null\r\n     * 选中\r\n     */    \r\n    select(): rSu.Node{\r\n        let selMk = false,\r\n            bAttr = this.getBBox(),\r\n            {attr, ps} = bAttr,\r\n            {x, y, width, height} = attr,\r\n            {paper} = this,\r\n            ist:RaphaelElement \r\n        \r\n        this.removeBox()\r\n        this.isSelEd = true        \r\n        this.tRElem['box'] = paper.rect(x, y, width, height)\r\n            .attr({\r\n                'stroke': '#0033FF',\r\n                'stroke-width': '0.8'\r\n            })        \r\n        for(var key in ps){\r\n            let {x, y} = ps[key]\r\n            this.tRElem['__p' + key] = paper.circle(x, y, 2)\r\n                .attr('fill', '#000000')\r\n                .data('pcode', this.code)\r\n                .data('posi', key)\r\n            this.onCreateBoxPnt(this.tRElem['__p' + key])            \r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 移除历史边框\r\n     */\r\n    removeBox(){\r\n        if(!this.tRElem){\r\n            this.tRElem = {}\r\n        }\r\n        // 移除原边框，重新获取\r\n        if(this.tRElem.box){\r\n            this.tRElem.box.remove()\r\n            delete this.tRElem.box\r\n        }\r\n        for(var key in this.tRElem){\r\n            if(key.indexOf('__p') > -1){\r\n                this.tRElem[key].remove()\r\n                delete this.tRElem[key]\r\n            }\r\n        }\r\n        this.isSelEd = false\r\n        return this\r\n    }\r\n    /**\r\n     * 放大\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    zoomOut(rate?: number): rSu.Node{\r\n        rate = rate? rate: 0.05\r\n        var {c, opt} = this\r\n        opt.w = opt.w * (1 + rate)\r\n        opt.h = opt.h * (1 + rate)\r\n        this.updAttr({\r\n            w: opt.w,\r\n            h: opt.h\r\n        })\r\n        this.select()\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 首先\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    zoomIn(rate?: number): rSu.Node{\r\n        rate = rate? rate: 0.05\r\n        var {c, opt} = this\r\n        opt.w = opt.w * (1 - rate)\r\n        opt.h = opt.h * (1 - rate)\r\n        this.updAttr({\r\n            w: opt.w,\r\n            h: opt.h\r\n        })\r\n        this.select()\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 方向移动\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    move(type?: string, rate?: number): rSu.Node{\r\n        rate = rate? rate: 0.05\r\n        var {opt} = this,\r\n            uOpt: rSu.NodeOpt\r\n        type = type? type.toUpperCase() : type\r\n        switch(type){\r\n            case 'T':\r\n                uOpt = {cy: opt.cy * (1 - rate)}\r\n                break\r\n            case 'B':\r\n                uOpt = {cy: opt.cy * (1 + rate)}\r\n                break\r\n            case 'L':\r\n                uOpt = {cx: opt.cx * (1 - rate)}\r\n                break\r\n            case 'R':\r\n                uOpt = {cx: opt.cx * (1 + rate)}\r\n                break\r\n        }\r\n        if(uOpt){\r\n            this.updAttr(uOpt)\r\n            this.select()\r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 上移\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    move2T(rate?: number): rSu.Node{\r\n        this.move('T', rate)\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * \r\n     * 下移\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    move2B(rate?: number): rSu.Node{\r\n        this.move('B', rate)\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * \r\n     * 下移\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    move2L(rate?: number): rSu.Node{\r\n        this.move('L', rate)\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * \r\n     * 下移\r\n     * @param {number} rate 比例 0.05 [0-1]\r\n     */\r\n    move2R(rate?: number): rSu.Node{\r\n        this.move('R', rate)\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 底色\r\n     * @param {string} type 空便是默认底色， \r\n     */\r\n    background(type?: string|string[]): rSu.Node{\r\n        if('object' == typeof type){\r\n            Util.each(type, (i: number, t: string) => {\r\n                this.background(t)\r\n            })\r\n            return\r\n        }\r\n        if(type){\r\n            type = type.toLowerCase()\r\n        }\r\n        switch(type){\r\n            case 'magn':        // 磁化背景色\r\n                this.c.attr('fill', this.opt.bkgMagnetic)\r\n                break\r\n            case 'text':\r\n                if(!this.opt.bkgTxt){\r\n                    this.opt.bkgTxt = '#000000'\r\n                }\r\n                if(this.label){\r\n                    this.label.attr('fill', this.opt.bkgTxt)\r\n                }\r\n                break\r\n            case 'node':\r\n            default:\r\n                this.c.attr('fill', this.opt.bkg)\r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 删除节点中的临时节点\r\n     * @param key \r\n     */\r\n    clearTmpElem(key?: string|Array<string>): rSu.Node{\r\n        if(key){\r\n            let tArr: Array<string> = []\r\n            if('object' == typeof key){\r\n                tArr = key\r\n            }else{\r\n                tArr = [key]\r\n            }\r\n            Util.each(this.tRElem, (k: string, elem: RaphaelElement) => {\r\n                if($.inArray(k, tArr) > -1){\r\n                    elem.remove()\r\n                    delete this.tRElem[k]\r\n                }\r\n            })            \r\n        }else{\r\n            Util.each(this.tRElem, (k: string, elem: RaphaelElement) => {\r\n                elem.remove()\r\n                delete this.tRElem[k]\r\n            })  \r\n        }\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 事件接口 [生成边框先关的点] 用于连线\r\n     */\r\n    onCreateBoxPnt(rElem: RaphaelElement){}\r\n    /**\r\n     * 尺寸大小更新\r\n     * @memberof NodeAbstract\r\n     */\r\n    onSize(){}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeAbstract.ts","/**\r\n * 2018年1月4日 星期四\r\n * 工具库\r\n */\r\n///<reference path='../index.d.ts' />\r\n// 什么jQuery/RaphaelJs\r\ndeclare var $: any;\r\n\r\nclass Util{\r\n    /**\r\n     * 对象复制\r\n     * @param {object} t1 \r\n     */\r\n    static clone(t1: object){\r\n        t1 = 'object' == typeof t1? t1:{}\r\n        var obj = {}\r\n        return $.extend(true, obj, t1)\r\n    }\r\n    /**\r\n     * 数据合并相同的元素\r\n     * @param {*} array \r\n     */\r\n    static ArrayMergeSameValue(array: any[]){\r\n        if('object' == typeof array && array.length && array.length > 1){\r\n            var valueMap: rSu.bsMap = {}\r\n            var newArray = []\r\n            for(var i=0; i<array.length; i++){\r\n                if(valueMap[array[i]]){\r\n                    continue\r\n                }\r\n                newArray.push(array[i])\r\n                valueMap[array[i]] = true\r\n            }\r\n            array = newArray\r\n        }\r\n        return array\r\n    }\r\n    /**\r\n     * @param {array|object} obj \r\n     * @param {function} callback (k, v)\r\n     */\r\n    static each(obj: any, callback: any){\r\n        if('object' == typeof obj){\r\n            if($.isArray(obj)){\r\n                for(var i=0; i<obj.length; i++){\r\n                    if(false === callback(i, obj[i])){\r\n                        break\r\n                    }\r\n                }\r\n            }else{\r\n                for(var k in obj){\r\n                    if(false === callback(k, obj[k])){\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n    }\r\n    /**\r\n     * 字符首字母大写切换，test_case => TestCase, longtext => Longtext\r\n     * @param {string} str \r\n     */\r\n    static ucFirst(str: string, delimter?: string): string{\r\n        delimter = delimter? delimter : '_'\r\n        var strQue: string[] = str.split(delimter)\r\n        strQue.forEach((v: string, idx: number) => {\r\n            strQue[idx] = v.substr(0, 1).toUpperCase() + v.substr(1)\r\n        })\r\n        return strQue.join('')\r\n    }\r\n    /**\r\n     * 判断是否是数组\r\n     * @param {*} value \r\n     */\r\n    static isArray(value: any): boolean{\r\n        if('object' == typeof value){\r\n            return value instanceof Array\r\n        }\r\n        return false\r\n    }\r\n    /**\r\n     * json 数据合并\r\n     * @param bjson \r\n     * @param mjson \r\n     */\r\n    static jsonMerge(bjson: rSu.bsMap, mjson: rSu.bsMap): rSu.bsMap{\r\n        bjson = bjson? bjson : {}\r\n        Util.each(mjson, (k: any, v: any) => {\r\n            bjson[k] = v\r\n        })\r\n        return bjson\r\n    }\r\n    /**\r\n     * @param json \r\n     */\r\n    static jsonValues(json: rSu.bsMap): any[]{\r\n        let value: any[] = []\r\n        Util.each(json, (k: any, v: any) => {\r\n            value.push(v)\r\n        })\r\n        return value\r\n    }\r\n    /**\r\n     * 获取子数组\r\n     * @param arr \r\n     * @param start \r\n     * @param end \r\n     */\r\n    static subArray(arr: any[], start?: number, end?: number): any[]{\r\n        let nArr: any[] = [],\r\n            len: number = arr.length\r\n        end = end? end: arr.length - 1\r\n        start = start? start : 0\r\n        if(end < 0){\r\n            end = len + end - 1\r\n        }\r\n        for(let i=0; i<len; i++){\r\n            // console.log(i >= start && i >= end, `${i} >= ${start} && ${i} >= ${end}`)\r\n            if(i >= start && i <= end){\r\n                nArr.push(arr[i])\r\n            }\r\n        }\r\n        return nArr\r\n    }\r\n    /**\r\n     * 是否存在代码\r\n     * @param v \r\n     * @param arr \r\n     */\r\n    static inArray(v: any, arr: any[]): number{\r\n        arr = arr? arr: []\r\n        for(let i=0; i<arr.length; i++){\r\n            if(v == arr[i]){\r\n                return i\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n}\r\n\r\nexport {Util}\n\n\n// WEBPACK FOOTER //\n// ./src/util.ts","/**\r\n * 节点常量配置\r\n */\r\n// 1-开始、2-任务、3-判断、4-审核、5-会签、4-并行、5-合并、8-子流程、9-结束\r\nexport var cNode: rSu.bsMap = {\r\n    begin: {\r\n        type: 1,\r\n        text: '开始'\r\n    },\r\n    task: {\r\n        type: 2,\r\n        text: '任务'\r\n    },\r\n    cond: {\r\n        type: 3,\r\n        text: '判断'\r\n    },\r\n    audit: {\r\n        type: 4,\r\n        text: '审核'\r\n    },\r\n    sign: {\r\n        type: 5,\r\n        text: '会签'\r\n    },\r\n    parallel: {\r\n        type: 6,\r\n        text: '并行'\r\n    },\r\n    merge: {\r\n        type: 7,\r\n        text: '合并'\r\n    },\r\n    subFlow: {\r\n        type: 8,\r\n        text: '子流程'\r\n    },\r\n    end: {\r\n        type: 9,\r\n        text: '结束'\r\n    },\r\n    text: { // 特殊文本\r\n        type: 9994,\r\n        text: '文本'\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/confNode.ts","import { Util } from \"../util\";\r\n\r\n/**\r\n * 2018年4月13日 星期五\r\n * 节点计算算法\r\n */\r\n\r\nexport default class NodeUtil{\r\n    /**\r\n     * 两点转箭头，箭头生成算法\r\n     * @param P1 \r\n     * @param P2 \r\n     * @param r \r\n     * @param onlyMidPMk 仅仅中间坐标点\r\n     */\r\n    static ps2arrow(P1: rSu.P, P2: rSu.P, r: number, onlyMidPMk?: boolean){\r\n        var atan = Math.atan2(P1.y - P2.y, P2.x - P1.x) * (180 / Math.PI);\r\n\r\n        var centerX = P2.x - r * Math.cos(atan * (Math.PI / 180));\r\n        var centerY = P2.y + r * Math.sin(atan * (Math.PI / 180));\r\n\r\n        var x2 = centerX + r * Math.cos((atan + 120) * (Math.PI / 180));\r\n        var y2 = centerY - r * Math.sin((atan + 120) * (Math.PI / 180));\r\n\r\n        var x3 = centerX + r * Math.cos((atan + 240) * (Math.PI / 180));\r\n        var y3 = centerY - r * Math.sin((atan + 240) * (Math.PI / 180));\r\n\r\n        let pV1 = [P2],\r\n            pV2 = [\r\n                {x: x2, y: y2},\r\n                {x: x3, y: y3},\r\n                P2\r\n            ]\r\n        if(onlyMidPMk){\r\n            pV1 = pV2\r\n        }else{\r\n            pV1 = pV1.concat(pV2)\r\n        }\r\n        return pV1\r\n    }\r\n    /**\r\n     * 获取两点间的距离\r\n     */\r\n    static getPLen(P1: rSu.P, P2: rSu.P): number{\r\n        return Math.pow(\r\n            (Math.pow((P1.x - P2.x), 2) + Math.pow((P1.y - P2.y), 2)),\r\n            1/2\r\n        )\r\n    }\r\n    /**\r\n     * 点转折线\r\n     * @param P1 地点\r\n     * @param P2 终点\r\n     * @param isYFirst 先移动Y轴\r\n     */\r\n    static point2Poly(P1: rSu.P, P2: rSu.P, isYFirst?: boolean){\r\n        let tP: rSu.P \r\n        if(P1.x != P2.x && P1.y != P2.y){\r\n            if(isYFirst){\r\n                tP = {x: P1.x, y: P2.y}\r\n            }\r\n            else{\r\n                tP = {x: P2.x, y: P1.y}\r\n            }\r\n        }\r\n        return tP\r\n    }\r\n    /**\r\n     * 点连线装换为path字符串\r\n     * @param {array} pQue \r\n     * @param {bool} isClose \r\n     * @returns {string}\r\n     */\r\n    static ps2Path(pQue: rSu.P[], isClose?: boolean): string{\r\n        var path = ''\r\n        for(var i=0; i<pQue.length; i++){\r\n            path += (path? 'L': 'M') + pQue[i].x + ',' + pQue[i].y\r\n        }\r\n        if(isClose){\r\n            path += 'Z'\r\n        }        \r\n        return path\r\n    }\r\n    /**\r\n     * 元素类型转节点\r\n     * @param elem \r\n     */\r\n    static path2ps(elem: RaphaelElement): rSu.P[]{\r\n        let tPs: rSu.P[] = []\r\n        Util.each(elem.attr('path'), (idx: number, row: any) => {\r\n            tPs.push({x: row[1], y: row[2]})\r\n        })\r\n        return tPs\r\n    }\r\n    /**\r\n     * 点连线转换为字符串数组\r\n     * @param {array} pQue \r\n     * @param {bool} isClose \r\n     * @returns {array} string[]\r\n     */\r\n    static ps2PathAttr(pQue: rSu.P[], isClose?: boolean){\r\n        var pArr: any[] = []\r\n        for(var i=0; i<pQue.length; i++){\r\n            var cPArr: any[] = ['L']\r\n            if(pArr.length == 0){\r\n                cPArr[0] = 'M'\r\n            }\r\n            cPArr.push(pQue[i].x, pQue[i].y)\r\n            pArr.push(cPArr)\r\n        }\r\n        if(isClose){\r\n            pArr.push(['Z'])\r\n        }        \r\n        return pArr\r\n    }\r\n    /**\r\n     * 获取中间点坐标\r\n     * @param p0 \r\n     * @param p1 \r\n     */\r\n    static middP(p0: rSu.P, p1: rSu.P): rSu.P{\r\n        return {x: (p0.x + p1.x)/2, y: (p0.y + p1.y)/2}\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeUtil.ts","\r\n/**\r\n * 2018年3月29日 星期四\r\n * 节点队列\r\n */\r\nimport { Util } from \"./util\";\r\nimport NodeAbstract from \"./node/NodeAbstract\";\r\nimport NodeBegin from \"./node/NodeBegin\";\r\nimport NodeTask from \"./node/NodeTask\";\r\nimport NodeAudit from \"./node/NodeAudit\";\r\nimport NodeSign from \"./node/NodeSign\";\r\nimport NodeCond from \"./node/NodeCond\";\r\nimport NodeSubFlow from \"./node/NodeSubFlow\";\r\nimport NodeParallel from \"./node/NodeParallel\";\r\nimport NodeMerge from \"./node/NodeMerge\";\r\nimport NodeEnd from \"./node/NodeEnd\";\r\nimport NodeLn from \"./node/NodeLn\";\r\nimport NodeLnPoly from \"./node/NodeLnPoly\";\r\nimport NodeText from \"./node/NodeText\";\r\n//export \r\nexport class NodeQue{\r\n    paper: RaphaelPaper\r\n    constructor(paper: RaphaelPaper){\r\n        this.paper = paper\r\n    }\r\n    /**\r\n     * 生成节点\r\n     * @param NodeType \r\n     * @param nOpt \r\n     */\r\n    make(NodeType: string, nOpt: rSu.NodeOpt): rSu.Node{\r\n        var name = Util.ucFirst(NodeType),\r\n            paper = this.paper\r\n        var ist: rSu.Node\r\n        // var ist: any\r\n        switch(name){\r\n            case 'Begin':\r\n                ist = <rSu.Node>new NodeBegin(paper, nOpt)\r\n                break\r\n            case 'Task':\r\n                ist = <rSu.Node>new NodeTask(paper, nOpt)\r\n                break\r\n            case 'Audit':\r\n                ist = <rSu.Node>new NodeAudit(paper, nOpt)\r\n                break\r\n            case 'Sign':\r\n                ist = <rSu.Node>new NodeSign(paper, nOpt)\r\n                break\r\n            case 'Cond':\r\n                ist = <rSu.Node>new NodeCond(paper, nOpt)\r\n                break\r\n            case 'SubFlow':\r\n                ist = <rSu.Node>new NodeSubFlow(paper, nOpt)\r\n                break\r\n            case 'Parallel':\r\n                ist = <rSu.Node>new NodeParallel(paper, nOpt)\r\n                break\r\n            case 'Merge':\r\n                ist = <rSu.Node>new NodeMerge(paper, nOpt)\r\n                break\r\n            case 'End':\r\n                ist = <rSu.Node>new NodeEnd(paper, nOpt)\r\n                break\r\n            case 'Ln':\r\n                ist = <rSu.Node>new NodeLn(paper, nOpt)\r\n                break\r\n            case 'LnPoly':\r\n                ist = <rSu.Node>new NodeLnPoly(paper, nOpt)\r\n                break\r\n            case 'Text':\r\n                ist = <rSu.Node>new NodeText(paper, nOpt)\r\n                break\r\n        }\r\n        return ist\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/NodeQue.ts","/**\r\n * 2018年3月7日 星期三\r\n * 浏览器端，非 npm 管理引入包\r\n * Joshua Conero\r\n */\r\n\r\n/*--\r\n    Raphael 包与 worker 同文件打包时，umd 规范出错： eve is not defined // 2018年3月7日 星期三\r\n--\r\n*/\r\ndeclare function define(...args: any[]): any;\r\n\r\ndefine(['raphael', './WorkerEditor'], function(Raphael: any, WorkerEditor: any){\r\n    (<any>window).Raphael = Raphael\r\n    // 2018年3月23日 星期五\r\n    // `` AMD/RequireJs 文件加载风格，从 ts 库 中加载的文件，默认加载无效\r\n    var workflow: any = 'function' == typeof WorkerEditor.default? WorkerEditor.default: WorkerEditor\r\n    \r\n    return workflow\r\n})\n\n\n// WEBPACK FOOTER //\n// ./src/browser.FlowEditor.umd.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"raphael\"\n// module id = 6\n// module chunks = 0","///<reference path='../index.d.ts' />\r\n/**\r\n * 2018年3月1日 星期四\r\n * worker 工作流编辑器\r\n */\r\nimport H from './helper'            // 助手方法\r\nimport {VersionStruct, LibVersion} from '../version'\r\nimport { Util } from './util';\r\nimport ToolBar from './ToolBar';\r\nimport { NodeQue } from './NodeQue';\r\nimport {cNode} from './confNode'\r\nimport NodeUtil from './node/NodeUtil';\r\n\r\n// 什么jQuery/RaphaelJs\r\ndeclare var $: any;\r\n\r\n/**\r\n * 工作流编辑器轻量级\r\n */\r\nexport default class WorkerEditor{\r\n    // config: object\r\n    config: rSu.bsMap\r\n    paper: RaphaelPaper\r\n    _rIdx: number\r\n    _code2EidDick: {\r\n        [k: string]: string\r\n    }\r\n    _LineDragingP:any\r\n    MagneticCore: any\r\n    toolbarCtrl?: rSu.ToolBar       // 工具栏控制器\r\n    \r\n    protected toolNodeIstQue: any[]     // 工具栏部件节点队列\r\n    private ndMer: rSu.NodeQue\r\n    private nodeDick: rSu.mapNode       // 节点字典\r\n    private connDick: rSu.mapNode       // 连线字典 c{index}\r\n    private textDick: rSu.mapNode       // 文本字典 t{index}\r\n    private idxDick: rSu.bsMap          // 连线处理栈 {c: numer-连线, a: number-字母}\r\n    private lineCnMode: {               // 直线连接模式\r\n        isSelEd: boolean,\r\n        type: string,\r\n        fromIst?: rSu.Node                // 连线起点节点实例\r\n        toIst?: rSu.Node                  // 连线终点节点实例\r\n        lnIst?: rSu.Node                  // 连线实例\r\n    }\r\n    private tmpNodeMap: rSu.mapNode     // 临时节点字典\r\n    private tmpMapRElm: rSu.MapRElm     // 临时节点\r\n    private previewMk: boolean          // 预览模式\r\n    // toolNodeIstQue: any[]     // 工具栏部件节点队列\r\n    // 静态属性\r\n    static version: VersionStruct = LibVersion\r\n\r\n    /**\r\n     * @param {object} config 数据配置项\r\n     */\r\n    constructor(config: any){  \r\n        // 索引处理字典\r\n        this.idxDick = {\r\n            c: 0,                   // 连接线\r\n            n: 0,                   // 节点\r\n            t: 0                    // 文本\r\n        }\r\n        this.nodeDick = {}      \r\n        this.connDick = {}\r\n        this.textDick = {}\r\n        this.tmpNodeMap = {}\r\n        this.tmpMapRElm = {}\r\n        this.config = config            // 系统配置参数\r\n        this.paper = H.createInstance(config) // Raphael 对象        \r\n        this.ndMer = new NodeQue(this.paper)\r\n        // 配置参数处理\r\n        this._configMergeToDefule()\r\n        this._rIdx = 0                          // 内部索引，用于生成代码\r\n        this._code2EidDick = {}                 // 内部代码与元素id的映射字段\r\n        this._LineDragingP = null               // RaphaelElement 直线正在拖动记录点\r\n        // 内部缓存数组件容器： 节点、连接线、独立文本\r\n        this.MagneticCore = null                // 连线磁化中心点，用于节点关联，单状态的结构 data: {type: from/to}        \r\n        this._cerateToolBar()\r\n        // 数据加载\r\n        if(config.data){\r\n            try {\r\n                this.load(config.data)   \r\n            } catch (error) {\r\n                console.log(error)\r\n            }            \r\n        }\r\n        // 绑定协助事件\r\n        if(this.config.bindOEvts){\r\n            this.operHelpEvts()\r\n        }\r\n        this._domListener()\r\n    }\r\n    /**\r\n     * 配置参数与默认参数和合并处理\r\n     */\r\n    _configMergeToDefule(){\r\n        // pkgClr 背景颜色\r\n        var pkgClr = this.config.pkgClr || {}\r\n        pkgClr.start = pkgClr.start || 'rgb(181, 216, 126)'\r\n        pkgClr.opera = pkgClr.opera || 'rgb(224, 223, 226)'\r\n        pkgClr.judge = pkgClr.judge || 'rgb(49, 174, 196)'\r\n        pkgClr.end = pkgClr.end || 'rgb(34, 185, 41)'\r\n        pkgClr.arrow = pkgClr.arrow || 'rgb(3, 84, 41)'\r\n        pkgClr.NodeBox = pkgClr.NodeBox || 'rgb(15, 13, 105)'\r\n\r\n        this.config.pkgClr = pkgClr\r\n        this.config.prefCode = this.config.prefCode || 'A' // 内部代码前缀\r\n        this.config.listener = this.config.listener || {}   // 监听事件\r\n\r\n        this.config.noToolBar = this.config.noToolBar || false\r\n    }\r\n    /**\r\n     * 连线同步\r\n     * @param x \r\n     * @param y \r\n     */\r\n    private _lineMoveSync(x: number, y: number, node: rSu.Node){\r\n        let conLns = node.conLns,\r\n            {from, to} = conLns,\r\n            $this = this\r\n        // 处理起点\r\n        Util.each(from, (k: number, v: string) => {\r\n            let fromLn: rSu.Node = $this.connDick[v]\r\n            if('ln' == fromLn.NodeType){\r\n                let from_code = fromLn.data('from_code'),\r\n                    from_posi = fromLn.data('from_posi'),\r\n                    {ps} = node.getBBox()\r\n                fromLn.updAttr({P1: ps[from_posi]})\r\n            }else{\r\n                let from_code = fromLn.data('from_code'),\r\n                    from_posi = fromLn.data('from_posi'),\r\n                    {ps} = node.getBBox()\r\n                ; (<any>fromLn).mvEndPoint(ps[from_posi])\r\n            }\r\n        })\r\n        // 处理终点\r\n        Util.each(to, (k: number, v: string) => {\r\n            let toLn: rSu.Node = $this.connDick[v]\r\n            if('ln' == toLn.NodeType){\r\n                toLn.updAttr({P2: {x, y}})\r\n                let to_code = toLn.data('to_code'),\r\n                    to_posi = toLn.data('to_posi'),\r\n                    {ps} = node.getBBox()\r\n                toLn.updAttr({P2: ps[to_posi]})\r\n            }else{\r\n                toLn.updAttr({P2: {x, y}})\r\n                let to_code = toLn.data('to_code'),\r\n                    to_posi = toLn.data('to_posi'),\r\n                    {ps} = node.getBBox()\r\n                // toLn.updAttr({P2: ps[to_posi]})\r\n                ;(<any>toLn).mvEndPoint(ps[to_posi], true)\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 工具栏处理器\r\n     */\r\n    private _cerateToolBar(): any{\r\n        // 工具栏显示控制\r\n        if(this.config.noToolBar){\r\n            return null\r\n        }\r\n        this.toolbarCtrl = new ToolBar(this.paper, this.config)\r\n\r\n        // 事件绑定处理\r\n        var $this = this,\r\n            {tBodyNds, cBodyNds, connElems} = $this.toolbarCtrl,\r\n            bkg = this.config.bkg || {}\r\n            \r\n        // 节点拖动处理事件\r\n        Util.each(tBodyNds, (key: string, nd: rSu.Node) => {\r\n            // 开始和结束不支持拖动\r\n            // if(key == 'begin' || key == 'end'){\r\n            //     return null\r\n            // }\r\n            let ndAst: rSu.Node,\r\n                tP: rSu.P = {x: 0, y:0}\r\n            nd.c.drag(function(dx: number, dy: number): any{\r\n                dx += tP.x\r\n                dy += tP.y\r\n                if(ndAst){\r\n                    ndAst.updAttr({cx: dx, cy: dy})\r\n                }                    \r\n            },\r\n            function(): any{\r\n                let {cx, cy} = nd.opt\r\n                tP.x = cx\r\n                tP.y = cy\r\n                cx += 25\r\n                let ndOpt:rSu.NodeOpt = {cx, cy, w: 50, h:40}\r\n                if(cNode[key]){\r\n                    ndOpt.text = cNode[key].text\r\n                }           \r\n                // 默认颜色，新增节点未运行状态\r\n                ndOpt.bkg = bkg.urunNd || '#CDC5BF'\r\n\r\n                ndAst = $this.ndMer.make(key, ndOpt)\r\n                    .creator()\r\n                    .moveable({\r\n                        beforeMv: function(node: rSu.Node){\r\n                            if($this.previewMk){\r\n                                return false\r\n                            }\r\n                        },\r\n                        afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                            $this._lineMoveSync(x, y, node)\r\n                        }\r\n                    })\r\n                $this._nodeBindEvt(ndAst)\r\n                if('text' == ndAst.NodeType){\r\n                    let tIdx = $this._order('t', 'T')\r\n                    // 保存到字典中\r\n                    ndAst.data('_code', tIdx)\r\n                    $this.textDick[tIdx] = ndAst\r\n                }\r\n                else{\r\n                    let _index = $this._order('n', 'A')\r\n                    // 保存到字典中\r\n                    ndAst.data('_code', _index)\r\n                    $this.nodeDick[_index] = ndAst\r\n                }\r\n            },\r\n            function(): any{\r\n                console.log(this, '测试：end')\r\n            })\r\n        })\r\n        // 连接线 -----------------\r\n        let {lnCon, lnPolyCon} = connElems,\r\n            {lnSeledBkg, lnDefBkg} = $this.toolbarCtrl.config\r\n        // 内部属性标记\r\n        lnCon.data('con', 'ln')\r\n        lnPolyCon.data('con', 'lnPoly')\r\n\r\n        // 清空连线选择状态\r\n        this.lineCnMode = {\r\n            isSelEd: false,\r\n            type: null\r\n        }\r\n        var clearAllLinkSeled = () => {\r\n            Util.each(cBodyNds, (key: string, nd: rSu.Node) => {\r\n                nd.isSelEd = false\r\n            })\r\n            this.lineCnMode = {\r\n                isSelEd: false,\r\n                type: null\r\n            }\r\n            lnCon.attr('fill', lnDefBkg)\r\n            lnPolyCon.attr('fill', lnDefBkg)\r\n        }\r\n        // 节点内部选择控制事件\r\n        var afterLnCnnClickedEvt = () => {\r\n            // 存在被选中的节点时，重新生成\r\n            let cSeledNode = $this.select()\r\n            if(cSeledNode){\r\n                cSeledNode.select()\r\n            }\r\n        }\r\n        Util.each(cBodyNds, (key: string, nd: rSu.Node) => {\r\n            //console.log(key, nd)\r\n            // 点击事件\r\n            nd.c.click(function(){\r\n                let isSelEd = nd.isSelEd\r\n                clearAllLinkSeled()\r\n                if(!isSelEd){\r\n                    nd.isSelEd = true\r\n                    $this.lineCnMode = {\r\n                        isSelEd: true,\r\n                        type: nd.NodeType\r\n                    }\r\n                    if(nd.NodeType == 'ln'){\r\n                        lnCon.attr('fill', lnSeledBkg)\r\n                    }\r\n                    else{\r\n                        lnPolyCon.attr('fill', lnSeledBkg)\r\n                    }\r\n                    afterLnCnnClickedEvt()\r\n                }\r\n            })\r\n        })\r\n        // 基于 WorkerEditor 属性\r\n        let lnConClickEvt = function(){            \r\n            // 选中\r\n            if(!$this.lineCnMode.isSelEd || \r\n                ($this.lineCnMode.isSelEd && this.data('con') != $this.lineCnMode.type)){    \r\n                    clearAllLinkSeled()\r\n                    this.attr('fill', lnSeledBkg)\r\n                    $this.lineCnMode = {\r\n                        isSelEd: true,\r\n                        type: this.data('con')\r\n                    }              \r\n                    afterLnCnnClickedEvt()              \r\n            }else{\r\n                clearAllLinkSeled()\r\n            }\r\n        }\r\n        lnCon.click(lnConClickEvt)\r\n        lnPolyCon.click(lnConClickEvt)\r\n    }\r\n    /**\r\n     * 节点事件绑定\r\n     * @param {rSu.Node} node 输入为空时绑定所有值\r\n     */\r\n    private _nodeBindEvt(node?: rSu.Node){\r\n        var $this = this,\r\n            {ndMer, config} = this,\r\n            bkg = config.bkg || {}            \r\n        ;\r\n        // 事件绑定处理\r\n        var toBindNodeEvts = (nd: rSu.Node) => {\r\n            // 点击\r\n            nd.c.click(function(){\r\n                $this.removeAllSeled()\r\n                nd.select()\r\n                $this.onClick(nd)\r\n            })\r\n            // 双击\r\n            nd.c.dblclick(function(){\r\n                $this.onDbClick(nd)\r\n            })\r\n            //nd\r\n            // 处理接口            \r\n            nd.onCreateBoxPnt = function(pnt: RaphaelElement){\r\n                // 预览标识\r\n                if($this.previewMk){\r\n                    return null\r\n                }\r\n                var tmpLnIst: rSu.Node             \r\n                // 开启连线模式时\r\n                if($this.lineCnMode && $this.lineCnMode.isSelEd){\r\n                    // 配置，禁止节点之间连线\r\n                    if(config.disConnNode){\r\n                        return null\r\n                    }\r\n                    var tmpP = {x: 0, y: 0}\r\n                    pnt.drag(\r\n                        function(dx: number, dy: number){   // moving\r\n                            if(!tmpLnIst){\r\n                                console.log('选择框连线拖动出错！')\r\n                                return\r\n                            }\r\n                            dx += tmpP.x\r\n                            dy += tmpP.y\r\n                            let collNode: rSu.Node = $this.collisionByP(dx, dy)\r\n                            $this.allBackground()\r\n                            if(collNode){                                \r\n                                let rElem = collNode.magnCore(dx, dy)\r\n                                if(rElem){\r\n                                    dx = rElem.attr('cx')\r\n                                    dy = rElem.attr('cy')\r\n                                    tmpLnIst.data('to_code', rElem.data('pcode'))\r\n                                        .data('to_posi', rElem.data('posi'))\r\n                                }                                \r\n                                collNode.background('magn')\r\n                            }else{\r\n                                tmpLnIst.data('to_code', null)\r\n                                        .data('to_posi', null)\r\n                            }\r\n                            if($this.lineCnMode.type == 'ln'){\r\n                                tmpLnIst.updAttr({\r\n                                    P2: {x: dx, y: dy}\r\n                                })\r\n                            }else{\r\n                                tmpLnIst.opt.MPs = [];   // 删除中间代码\r\n                                // (<any>tmpLnIst).getMiddP()\r\n                                tmpLnIst.updAttr({\r\n                                    P2: {x: dx, y: dy}\r\n                                })\r\n                            }\r\n                        },\r\n                        function(){     // start\r\n                            // 历史节点处理                            \r\n                            $this.removeTmpNode('connLnIst')\r\n                            // 删除所有联系那选中状态\r\n                            $this.removeAllSeled('conn')\r\n                            // 处理\r\n                            tmpP.x = this.attr('cx')\r\n                            tmpP.y = this.attr('cy')\r\n                          \r\n                            let newOpt: rSu.NodeOpt = {},\r\n                                lx = tmpP.x, \r\n                                ly = tmpP.y\r\n                            if($this.lineCnMode.type == 'ln'){\r\n                                newOpt = {\r\n                                    P1: {x: lx, y: ly},\r\n                                    P2: {x: lx+10, y: ly+5}\r\n                                }\r\n                            }\r\n                            else{\r\n                                newOpt = {\r\n                                    P1: {x: lx, y: ly},            \r\n                                    P2: {x: lx+4, y: ly + 4},\r\n                                    //h: 4\r\n                                    r: 5\r\n                                }\r\n                            }\r\n                            // 默认颜色，新增节点未运行状态\r\n                            newOpt.bkg = bkg.urunNd || '#CDC5BF'\r\n                            tmpLnIst = ndMer.make($this.lineCnMode.type, newOpt)\r\n                                .creator()\r\n                                .data('from_code', pnt.data('pcode'))\r\n                                .data('from_posi', pnt.data('posi'))\r\n                            $this.tmpNodeMap['connLnIst'] = tmpLnIst\r\n                            \r\n                        },\r\n                        function(){ // end \r\n                            // 有效的连线保留，说明其连接成功\r\n                            if(tmpLnIst.data('to_code') && tmpLnIst.data('to_posi')){\r\n                                let cIdx = $this._order('c', 'C'),\r\n                                    fCode = tmpLnIst.data('from_code'),\r\n                                    tCode = tmpLnIst.data('to_code')\r\n                                tmpLnIst.data('_code', cIdx)         \r\n\r\n                                let fNd: rSu.Node = $this.nodeDick[fCode]\r\n                                let tNd: rSu.Node = $this.nodeDick[tCode]\r\n\r\n                                fNd.line(<string>cIdx)\r\n                                fNd.clearTmpElem('mc')\r\n                                tNd.line(<string>cIdx, true)\r\n                                tNd.clearTmpElem('mc')\r\n                                $this.allBackground()\r\n\r\n                                // 记录到字典中\r\n                                $this._lineBindEvt(tmpLnIst)\r\n                                $this.connDick[cIdx] = tmpLnIst\r\n                                $this.tmpNodeMap['connLnIst'] = null\r\n                            }\r\n                            $this.removeTmpNode('connLnIst')\r\n                            // \r\n                            // $this.tmpNodeMap['connLnIst'] = tmpLnIst\r\n                        }\r\n                    )\r\n                }\r\n                // 节点方位拖动大小\r\n                else if(!config.disEpDragble){\r\n                    let tp: rSu.P = {x: 0, y: 0},\r\n                        attr: rSu.bsMap = {pcode: null, posi: null}\r\n                    pnt.drag(\r\n                        function(dx: number, dy: number){\r\n                            dx += tp.x, dy += tp.y\r\n                            let cnode: rSu.Node = attr.pcode? $this.nodeDick[attr.pcode]: null\r\n                            if(cnode && attr.pcode && attr.posi){\r\n                                let opt = cnode.opt,\r\n                                    {cx, cy, h, w} = opt,\r\n                                    boxPadding: number = cnode.feature('boxPadding')\r\n                                    \r\n                                // 数据申明\r\n                                let yt: number, yb: number, xl: number, xr:  number\r\n                                // 新值\r\n                                let yt1: number, yb1: number, xl1: number, xr1: number\r\n                                let cx1: number, cy1: number, h1: number, w1: number\r\n                                switch(attr.posi){\r\n                                    case 'a':   // 左上角移动\r\n                                        yt1 = dy + boxPadding\r\n                                        xl1 = dx + boxPadding\r\n                                        yb = cy + h/2\r\n                                        xr = cx + w/2\r\n                                        if(yt1 <= yb && xl1 <= xr){\r\n                                            h1 = Math.abs(yt1 - yb)\r\n                                            w1 = Math.abs(xl1 - xr)\r\n                                            cx1 = xl1 + w1/2\r\n                                            cy1 = yt1 + h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                w: w1,\r\n                                                cx: cx1,\r\n                                                cy: cy1\r\n                                            })  \r\n                                        }\r\n                                        break\r\n                                    case 'b':   // 上拉 \r\n                                        yt1 = dy + boxPadding\r\n                                        yb = cy + h/2\r\n                                        if(yt1 <= yb){\r\n                                            h1 = Math.abs(yb - yt1)\r\n                                            cy1 = yt1 + h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                cy: cy1\r\n                                            })  \r\n                                            // 同步更新边框，报错 [BUG]\r\n                                            // cnode.select()\r\n                                        }\r\n                                        break\r\n                                    case 'c':   // 右上角\r\n                                        yt1 = dy + boxPadding\r\n                                        xr1 = dx - boxPadding\r\n                                        yb = cy + h/2\r\n                                        xl = cx - w/2\r\n                                        if(yt1 <= yb && xr1 >= xl){\r\n                                            h1 = Math.abs(yt1 - yb)\r\n                                            w1 = Math.abs(xr1 - xl)\r\n                                            cx1 = xr1 - w1/2\r\n                                            cy1 = yt1 + h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                w: w1,\r\n                                                cx: cx1,\r\n                                                cy: cy1\r\n                                            })  \r\n                                        }\r\n                                        break\r\n                                    case 'd':   // 右拉\r\n                                        xr1 = dx - boxPadding\r\n                                        xl = cx - w/2\r\n                                        if(xr1 >= xl){\r\n                                            w1 = Math.abs(xl - xr1),\r\n                                            cx1 = xr1 - w1/2\r\n                                            cnode.updAttr({\r\n                                                w: w1,\r\n                                                cx: cx1\r\n                                            })\r\n                                            // 同步更新边框，报错 [BUG]\r\n                                            // cnode.select()\r\n                                        }\r\n                                        break\r\n                                    case 'e':   // 右下角\r\n                                        yb1 = dy - boxPadding\r\n                                        xr1 = dx - boxPadding\r\n                                        yt = cy - h/2\r\n                                        xl = cx - w/2\r\n                                        if(yb1 >= yt && xr1 >= xl){\r\n                                            h1 = Math.abs(yb1 - yt)\r\n                                            w1 = Math.abs(xr1 - xl)\r\n                                            cx1 = xr1 - w1/2\r\n                                            cy1 = yb1 - h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                w: w1,\r\n                                                cx: cx1,\r\n                                                cy: cy1\r\n                                            }) \r\n                                        }\r\n                                        break\r\n                                    case 'f':   // 下拉\r\n                                        yb1 = dy - boxPadding,\r\n                                        yt = cy - h/2\r\n                                        if(yb1 >= yt){\r\n                                            h1 = Math.abs(yt - yb1),\r\n                                            cy1 = yb1 - h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                cy: cy1\r\n                                            })  \r\n                                            // 同步更新边框，报错 [BUG]\r\n                                            // cnode.select()\r\n                                        }\r\n                                        break\r\n                                    case 'g':   // 左下角\r\n                                        yb1 = dy - boxPadding\r\n                                        xl1 = dx + boxPadding\r\n                                        yt = cy - h/2\r\n                                        xr = cx + w/2\r\n                                        if(yb1 >= yt && xl1 <= xr){\r\n                                            h1 = Math.abs(yb1 - yt)\r\n                                            w1 = Math.abs(xl1 - xr)\r\n                                            cx1 = xl1 + w1/2\r\n                                            cy1 = yb1 - h1/2\r\n                                            cnode.updAttr({\r\n                                                h: h1,\r\n                                                w: w1,\r\n                                                cx: cx1,\r\n                                                cy: cy1\r\n                                            }) \r\n                                        } \r\n                                        break\r\n                                    case 'h':   // 左拉\r\n                                        xl1 = dx + boxPadding,\r\n                                        xr = cx + w/2\r\n                                        if(xl1 <= xr){\r\n                                            w1 = Math.abs(xr - xl1)\r\n                                            cx1  = xl1 + w1/2\r\n                                            cnode.updAttr({\r\n                                                w: w1,\r\n                                                cx: cx1\r\n                                            })\r\n                                            // 同步更新边框，报错 [BUG]\r\n                                            // cnode.select()\r\n                                        }\r\n                                        break\r\n                                }\r\n                            }\r\n                        },\r\n                        function(){\r\n                            // 处理\r\n                            tp.x = this.attr('cx')\r\n                            tp.y = this.attr('cy')\r\n                            //console.log(this.data())\r\n\r\n                            attr.pcode = this.data('pcode')\r\n                            attr.posi = this.data('posi')\r\n                        },\r\n                        function(){}\r\n                    )\r\n                }\r\n            }\r\n            // 尺寸自适应\r\n            nd.onSize = function(){\r\n                let opt = this.opt\r\n                $this._lineMoveSync(opt.cx, opt.cy, this)\r\n            }\r\n        }\r\n        if(node){\r\n            toBindNodeEvts(node)\r\n        }else{           \r\n            for(var key in this.nodeDick){\r\n                toBindNodeEvts(this.nodeDick[key])\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 连接线事件绑定\r\n     * @param ln \r\n     */\r\n    private _lineBindEvt(ln?: rSu.Node){\r\n        let $this = this\r\n        if(ln){\r\n            // 起点移动处理\r\n            var startPFn = (elem: RaphaelElement) => {\r\n                let p1: rSu.P = {x: 0, y: 0}\r\n                elem.drag(\r\n                    function(dx: number, dy: number){\r\n                        dx += p1.x\r\n                        dy += p1.y\r\n\r\n                        // 节点碰撞\r\n                        let collNode: rSu.Node = $this.collisionByP(dx, dy),\r\n                            fCode = ln.data('from_code'),\r\n                            lnCode = ln.code\r\n                        if(fCode){\r\n                            $this.nodeDick[fCode].rmLine(lnCode)\r\n                        }\r\n                        $this.allBackground()\r\n\r\n                        if(collNode){                                \r\n                            let rElem = collNode.magnCore(dx, dy)\r\n                            if(rElem){\r\n                                dx = rElem.attr('cx')\r\n                                dy = rElem.attr('cy')\r\n                                ln.data('from_code', rElem.data('pcode'))\r\n                                    .data('from_posi', rElem.data('posi'))\r\n                            }                                \r\n                            collNode.background('magn')\r\n                            collNode.line(lnCode)\r\n                        }else{\r\n                            ln.data('from_code', null)\r\n                                .data('from_posi', null)\r\n                        }\r\n                        ln.updAttr({P1: {x: dx, y: dy}})\r\n                    },\r\n                    function(){\r\n                        p1.x = this.attr('cx')                                \r\n                        p1.y = this.attr('cy')                                \r\n                    },\r\n                    function(){}\r\n                )\r\n            }\r\n            // 终点移动处理\r\n            var endPFn = (elem: RaphaelElement) => {\r\n                let p1: rSu.P = {x: 0, y: 0}\r\n                elem.drag(\r\n                    function(dx: number, dy: number){\r\n                        dx += p1.x\r\n                        dy += p1.y\r\n\r\n                        // 节点碰撞\r\n                        let collNode: rSu.Node = $this.collisionByP(dx, dy),\r\n                            fCode = ln.data('to_code'),\r\n                            lnCode = ln.code\r\n                        if(fCode){\r\n                            $this.nodeDick[fCode].rmLine(lnCode, true)\r\n                        }\r\n                        $this.allBackground()\r\n\r\n                        if(collNode){                                \r\n                            let rElem = collNode.magnCore(dx, dy)\r\n                            if(rElem){\r\n                                dx = rElem.attr('cx')\r\n                                dy = rElem.attr('cy')\r\n                                ln.data('to_code', rElem.data('pcode'))\r\n                                    .data('to_posi', rElem.data('posi'))\r\n                            }                                \r\n                            collNode.background('magn')\r\n                            collNode.line(lnCode, true)\r\n                        }else{\r\n                            ln.data('to_code', null)\r\n                                .data('to_posi', null)\r\n                        }\r\n                        ln.updAttr({P2: {x: dx, y: dy}})\r\n                    },\r\n                    function(){\r\n                        p1.x = this.attr('cx')                                \r\n                        p1.y = this.attr('cy')                                \r\n                    },\r\n                    function(){}\r\n                )\r\n            }\r\n            if('ln' == ln.NodeType){\r\n                ln.onCreateBoxPnt = function(pElem: RaphaelElement){\r\n                    // 预览标识\r\n                    if($this.previewMk){\r\n                        return null\r\n                    }\r\n                    let pcode = pElem.data('pcode'),\r\n                        posi = pElem.data('posi')\r\n                    // 起点\r\n                    if('f' == posi){\r\n                        startPFn(pElem)\r\n                    }\r\n                    else if('t' == posi){\r\n                        endPFn(pElem)\r\n                    }\r\n                }\r\n                // 连线选中\r\n                ln.c.click(function(){\r\n                    $this.removeAllSeled()\r\n                    ln.select()\r\n                })\r\n            }else{\r\n                // 连线选中\r\n                ln.c.click(function(){\r\n                    $this.removeAllSeled()\r\n                    ln.select()\r\n                })\r\n                // 边框点\r\n                ln.onCreateBoxPnt = function(pElem: RaphaelElement){\r\n                    // 预览标识\r\n                    if($this.previewMk){\r\n                        return null\r\n                    }\r\n\r\n                    let pcode = pElem.data('pcode'),\r\n                        posi = pElem.data('posi'),\r\n                        MPs = ln.opt.MPs,\r\n                        fMIdx: number =  (2 + MPs.length)*2 - 2,    // 聚焦点最大索引\r\n                        fMIdxStr: string = 'f' + fMIdx\r\n                    if('f0' == posi){    // 起点\r\n                        startPFn(pElem)\r\n                    }\r\n                    else if(fMIdxStr == posi){   // 终点\r\n                        endPFn(pElem)\r\n                    }\r\n                    else{   // 中间点\r\n                        let tP: rSu.P = {x: 0, y: 0},\r\n                            MPsTmp: rSu.P[] = [],\r\n                            MPsLn: RaphaelElement,   // 中间点串联成的临时连线\r\n                            fPQue: rSu.MapP = {},\r\n                            tElemKey: string = 'ln_ploy_point',\r\n                            idx0: number = -1, idx1: number = -1\r\n\r\n                        pElem.drag(\r\n                            function(dx: number, dy: number){\r\n                                dx += tP.x\r\n                                dy += tP.y\r\n                                let MPsLnAttr: rSu.P[] = NodeUtil.path2ps(MPsLn),\r\n                                    len: number = MPsLnAttr.length,\r\n                                    fp: rSu.P = MPsLnAttr[0],\r\n                                    tp: rSu.P = MPsLnAttr[len-1]\r\n                                /*\r\n                                    // console.log(MPsLnAttr, fp, tp)\r\n                                let pAttr: rSu.P[] = [fp],\r\n                                    cp: rSu.P = {x: dx, y: dy},  // 当前指向的节点\r\n                                    rp: rSu.P                       // 正在运行的节点\r\n                                \r\n                                rp = NodeUtil.point2Poly(fp, cp)\r\n                                if(rp){ pAttr.push(rp) }\r\n                                pAttr.push(cp)\r\n\r\n                                rp = NodeUtil.point2Poly(cp, tp)\r\n                                if(rp){ pAttr.push(rp) }\r\n\r\n                                pAttr.push(tp)\r\n                                MPsLn.attr('path', NodeUtil.ps2Path(pAttr))\r\n                                */\r\n\r\n                               let pAttr: rSu.P[] = [fp]\r\n                               // 同 x/y 轴坐标\r\n                               if(fp.x == tp.x || fp.y == tp.y){\r\n                                   // 同 x 轴，向 y 方向移动\r\n                                   if(fp.x == tp.x){\r\n                                       pAttr.push(\r\n                                           {x: dx, y: fp.y},\r\n                                           {x: dx, y: tp.y}\r\n                                       )\r\n                                   }\r\n                                   else{\r\n                                       pAttr.push(\r\n                                           {x: fp.x, y: dy},\r\n                                           {x: tp.x, y: dy}\r\n                                        )                                  \r\n                                   }\r\n                               }\r\n                               else{\r\n                                   pAttr.push(\r\n                                       {x: dx, y: fp.y},\r\n                                       {x: dx, y: dy},\r\n                                       {x: tp.x, y: dy},\r\n                                   )\r\n                               }\r\n                               pAttr.push(tp)\r\n                            //    console.log(pAttr)\r\n                               MPsLn.attr('path', NodeUtil.ps2Path(pAttr))\r\n                            },\r\n                            function(){\r\n                                tP.x = this.attr('cx')\r\n                                tP.y = this.attr('cy')\r\n                                \r\n                                fPQue = (<any>ln).getFocusPoint()\r\n                                let idx: number = parseInt(posi.replace('f', ''))\r\n                                \r\n                                idx0 = idx - 1\r\n                                idx1 = idx + 1\r\n\r\n                                let key0 = 'f' + idx0,\r\n                                key1 = 'f' + idx1\r\n\r\n                                let fp: rSu.P = fPQue[key0],\r\n                                    mp: rSu.P = fPQue[posi],\r\n                                    tp: rSu.P = fPQue[key1]\r\n\r\n                                if('f0' == key0){\r\n                                    fp = NodeUtil.middP(fp, mp)\r\n                                }\r\n                                if(fMIdxStr == key1){\r\n                                    tp = NodeUtil.middP(mp, tp)\r\n                                }\r\n                                MPsLn = this.paper.path(NodeUtil.ps2Path([\r\n                                    fp,\r\n                                    mp,\r\n                                    tp\r\n                                ]))\r\n                                    .attr('stroke', '#00FF00')\r\n\r\n                                $this.rmTempElem(tElemKey)\r\n                                $this.tmpMapRElm[tElemKey] = MPsLn\r\n                            },\r\n                            function(){\r\n                                let MPsLnAttr: rSu.P[] = NodeUtil.path2ps(MPsLn)\r\n                                let pQue: rSu.P[] = [],\r\n                                    isMkMPs: boolean = false    // 中间值产生成功\r\n                                Util.each(fPQue, (k: string, p: rSu.P) => {\r\n                                    let kIdx: number = parseInt(k.replace('f', ''))\r\n                                    if(kIdx >= idx0 && kIdx <= idx1){\r\n                                        if(!isMkMPs){\r\n                                            pQue = pQue.concat(pQue, MPsLnAttr)\r\n                                            isMkMPs = true\r\n                                        }\r\n                                    }\r\n                                    else{\r\n                                        pQue.push(p)\r\n                                    }\r\n                                })\r\n                                \r\n                                /*\r\n                                // 检测可以合并的点\r\n                                let pQue1: rSu.P[] = [], \r\n                                    pQueLen: number = pQue.length\r\n                                \r\n                                Util.each(pQue, (idx: number, p: rSu.P): any => {\r\n                                    // 索引比较\r\n                                    if(idx > 2){\r\n                                        let {x, y} = p,\r\n                                            th1n = pQue[idx - 1],    // 子1代\r\n                                            th2n = pQue[idx - 2],    // 子2代\r\n                                            dev: number = 0   // 误差 - deviation\r\n                                        if(\r\n                                            (Math.abs(x - th1n.x) < dev && Math.abs(x - th2n.x) < dev) || \r\n                                            (Math.abs(y - th1n.y) < dev && Math.abs(y - th2n.y) < dev)\r\n                                        ){\r\n                                            let isSameX = Math.abs(x - th1n.x) < dev && Math.abs(x - th2n.x) < dev,\r\n                                            //**\r\n                                            // * @param chgSelf 更新自身\r\n                                            // *\r\n                                                correctFn = (chgSelf?: boolean) => { // 修正值\r\n                                                    let xx = x, yy = y\r\n                                                    // 涉及 起点\r\n                                                    if(idx == 3){\r\n                                                        if(isSameX){\r\n                                                            xx = pQue[0].x\r\n                                                            if(chgSelf){\r\n                                                                p.x = xx\r\n                                                            }\r\n                                                        }else{\r\n                                                            yy = pQue[0].y\r\n                                                            if(chgSelf){\r\n                                                                p.y = yy\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    // 涉及 终点\r\n                                                    // else if(idx == pQueLen - 1){\r\n                                                    // }\r\n                                                    if(isSameX){\r\n                                                        pQue[idx - 1].x = xx\r\n                                                        pQue[idx - 2].x = xx\r\n                                                    }else{\r\n                                                        pQue[idx - 1].y = yy\r\n                                                        pQue[idx - 2].y = yy\r\n                                                    }\r\n                                                }\r\n                                            if(idx == pQueLen - 1){\r\n                                                pQue1.pop()\r\n                                                correctFn()\r\n                                            }\r\n                                            else{\r\n                                                correctFn(true)\r\n                                                return null\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    pQue1.push(p)\r\n                                })\r\n                                \r\n                                let nPMs = Util.subArray(pQue1, 1, -1)\r\n                                // let nPMs = Util.subArray(pQue, 1, -1)\r\n                                console.log(pQue, pQue1)\r\n                                ln.updAttr({\r\n                                    MPs: nPMs\r\n                                })\r\n                                */\r\n                                // 等处理，pQue 中重合的连接点 \r\n                                // @todo 2018年4月24日 星期二\r\n                                let nPMs = Util.subArray(pQue, 1, -1)\r\n                                // let nPMs = Util.subArray(pQue, 1, -1)\r\n                                //    console.log(pQue, pQue1)\r\n                                // console.log(pQue, nPMs)\r\n                                ln.updAttr({\r\n                                       MPs: nPMs\r\n                                })\r\n                                $this.rmTempElem(tElemKey)\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            // 公共鼠标选中事件\r\n            ln.c.hover(\r\n                function(){\r\n                    let _bkg = '#0033FF',\r\n                        sWd = '4px'\r\n                    this.attr('stroke-width', sWd)\r\n                        .attr('stroke', _bkg)\r\n                    // 箭体\r\n                    if(ln.inlineEle){\r\n                        ln.inlineEle\r\n                            .attr('fill', _bkg)\r\n                            .attr('stroke', _bkg)\r\n                            .attr('stroke-width', sWd)\r\n                    }\r\n                },\r\n                function(){\r\n                    let _bkg = ln.opt.bkg,\r\n                        sWd = '2px'\r\n\r\n                    this.attr('stroke-width', '2px')\r\n                        .attr('stroke', ln.opt.bkg)\r\n                    // 箭体\r\n                    if(ln.inlineEle){\r\n                        ln.inlineEle.attr('fill', ln.opt.bkg)\r\n                        ln.inlineEle.attr('stroke', ln.opt.bkg)\r\n                    }\r\n                }\r\n            )\r\n            // console.log(ln)\r\n        }\r\n    }\r\n    /**\r\n     * 移除所有选中中元素\r\n     */\r\n    removeAllSeled(type?: string|string[]){\r\n        // 删除所有节点\r\n        let removeAllSeledNodeFn = (dick: rSu.mapNode) => {\r\n            Util.each(dick, (cd: string, ist: rSu.Node) => {\r\n                if(ist.isSelEd){\r\n                    ist.removeBox()\r\n                }\r\n            })\r\n        }\r\n        type = type? ('object' == typeof type? type: [type]): ''\r\n        if(!type){\r\n            type = ['c', 't', 'n']\r\n        }\r\n        //console.log(type)\r\n        Util.each(type, (idx: number, tp: string) => {\r\n            let dick: rSu.mapNode = {}\r\n            if('c' == tp || 'conn' == tp){\r\n                dick = this.connDick\r\n            }else if('t' == tp || 'text' == tp){\r\n                dick = this.textDick\r\n            }else{\r\n                dick = this.nodeDick\r\n            }\r\n            removeAllSeledNodeFn(dick)\r\n        })\r\n        this.rmTempElem('allBorde')\r\n    }\r\n    /**\r\n     * 全选\r\n     */\r\n    allSelect(){\r\n        // 标记选中状态\r\n        this.allNdSeled()\r\n        // 预览模式\r\n        if(this.previewMk){\r\n            return\r\n        }\r\n        let {x, y, w, h} = this.getAllSelPs()\r\n        let $this = this\r\n        // 生成全选遮挡层\r\n        this.rmTempElem('allBorde')\r\n        var tP: rSu.P = {x: 0, y: 0},\r\n            pS: rSu.MapP = {}\r\n        let allBorde = this.paper.rect(x, y, w, h)\r\n            .attr('fill-opacity', 0.75)\r\n            .attr('fill', '#9999FF')\r\n            .dblclick(function(){   // 双击移除遮蔽层\r\n                $this.removeAllSeled()\r\n            })\r\n            .drag(\r\n                function(dx: number, dy: number){\r\n                    // 自身移动\r\n                    this.attr('x', tP.x + dx)\r\n                    this.attr('y', tP.y + dy)\r\n                    // 全部节点迁移\r\n                    // 等比例移动法\r\n                    Util.each($this.nodeDick, (k: string, node: rSu.Node) => {\r\n                        let nTp = pS[k]\r\n                        node.updAttr({\r\n                            cx: nTp.x + dx,\r\n                            cy: nTp.y + dy\r\n                        })\r\n                        node.select()\r\n                    })\r\n                    $this.allNdSeled('conn')\r\n                },\r\n                function(){\r\n                    tP.x = this.attr('x')\r\n                    tP.y = this.attr('y')\r\n                    // 节点中心点坐标\r\n                    Util.each($this.nodeDick, (k: string, node: rSu.Node) => {\r\n                        let opt = node.opt\r\n                        pS[k] = {\r\n                            x: opt.cx,\r\n                            y: opt.cy\r\n                        }\r\n                    })\r\n                },\r\n                function(){}\r\n            )\r\n        this.tmpMapRElm['allBorde'] = allBorde\r\n    }\r\n    /**\r\n     * 全选是相关端点\r\n     */\r\n    getAllSelPs(){\r\n        // 获取所有节点边框\r\n        let t: number = 0, b: number = 0, l: number = 0, r: number = 0\r\n        let boxPadding: number\r\n        Util.each(this.nodeDick, (k: string, node: rSu.Node) => {\r\n            let c = node.c,\r\n                {attr} = node.getBBox(),\r\n                {x, y, width, height} = attr,\r\n                t1: number = y, b1: number = y + height, l1: number = x, r1: number = x + width\r\n            if(!boxPadding) boxPadding = node.feature('boxPadding', null, 3)\r\n            if(t == 0) t = t1\r\n            if(b == 0) b = b1\r\n            if(l == 0) l = l1\r\n            if(r == 0) r = r1\r\n\r\n            // 上边框\r\n            if(t > t1) t = t1\r\n            // 下边框\r\n            if(b < b1) b = b1\r\n            // 左边框\r\n            if(l > l1) l = l1\r\n            // 右边框\r\n            if(r < r1) r = r1\r\n        })\r\n        let x1 = l, y1 = t, w1 = Math.abs(l - r), h1 = Math.abs(t - b)\r\n        boxPadding = boxPadding * 2\r\n        let boxPadding2 = boxPadding*2\r\n        return {\r\n            x: x1 - boxPadding,\r\n            y: y1 - boxPadding,\r\n            w: w1 + boxPadding2,\r\n            h: h1 + boxPadding2\r\n        }\r\n    }\r\n    /**\r\n     * 选中所有节点\r\n     * @param type \r\n     */\r\n    allNdSeled(type?: string | string[]){\r\n        if(type){\r\n            type = 'object' == typeof type? type: [type]\r\n        }else{\r\n            type = ['c', 't', 'n']\r\n        }\r\n        Util.each(type, (idx: number, tp: string) => {\r\n            let dick: rSu.mapNode = {}\r\n            if('c' == tp || 'conn' == tp){\r\n                dick = this.connDick\r\n            }else if('t' == tp || 'text' == tp){\r\n                dick = this.textDick\r\n            }else{\r\n                dick = this.nodeDick\r\n            }\r\n            Util.each(dick, (k: string, node: rSu.Node) => {\r\n                node.select()\r\n            })\r\n        })\r\n    }\r\n    // 删除所有节点\r\n    rmAllNode(){\r\n        Util.each(this.nodeDick, (k: string, node: rSu.Node) => {\r\n            this.remove(node)\r\n        })\r\n    }\r\n    // 删除所有连线\r\n    rmAllLine(){\r\n        Util.each(this.connDick, (k: string, node: rSu.Node) => {\r\n            this.remove(node)\r\n        })\r\n    }\r\n    // 删除所有文本\r\n    rmAllText(){\r\n        Util.each(this.textDick, (k: string, node: rSu.Node) => {\r\n            this.remove(node)\r\n        })\r\n    }\r\n    // 移除所有节点\r\n    allRemove(){\r\n        this.rmAllLine()\r\n        this.rmAllNode()\r\n        this.rmAllText()\r\n    }\r\n    /**\r\n     * 设置统一变化管理\r\n     */\r\n    allBackground(type?:string){\r\n        Util.each(this.nodeDick, (i: number, v: rSu.Node) => {\r\n            v.background(type)\r\n        })\r\n    }\r\n    /**\r\n     * 序列号获取\r\n     * @param type \r\n     */\r\n    private _order(type: string, prev?: string, ref?: string): string|number{\r\n        let newStr: string|number\r\n        prev = prev? prev: ''\r\n        if(type){\r\n            if('undefined' != typeof this.idxDick[type]){\r\n                this.idxDick[type] += 1\r\n                newStr = ref? ref: prev + this.idxDick[type]\r\n                switch(type){\r\n                    case 'c':\r\n                        if(this.connDick[newStr]){\r\n                            newStr = this._order(type, prev)\r\n                        }\r\n                        break\r\n                    case 'n':\r\n                        if(this.nodeDick[newStr]){\r\n                            newStr = this._order(type, prev)\r\n                        }\r\n                        break\r\n                    case 't':\r\n                        if(this.textDick[newStr]){\r\n                            newStr = this._order(type, prev)\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n        }\r\n        return newStr\r\n    }\r\n    /**\r\n     * 移除临时元素字典（支持模糊查询）\r\n     * @param key \r\n     * @param isLike 模糊查询\r\n     */\r\n    rmTempElem(key?: string, isLike?: string){\r\n        if(key && !isLike){\r\n            if(this.tmpMapRElm[key]){\r\n                this.tmpMapRElm[key].remove()\r\n            }\r\n        }else{\r\n            Util.each(this.tmpMapRElm, (k: string, elem: RaphaelElement) => {\r\n                if(isLike && key){\r\n                    if(k.indexOf(key) > -1){\r\n                        this.rmTempElem(k)\r\n                    }\r\n                }\r\n                else{\r\n                    this.rmTempElem(k)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    /**\r\n     * 获取最新的节点\r\n     */\r\n    last(): rSu.Node{\r\n        let lastNode:rSu.Node = null\r\n        for(var key in this.nodeDick){\r\n            lastNode = this.nodeDick[key]\r\n        }\r\n        return lastNode\r\n    }\r\n    /**\r\n     * 删除节点\r\n     */\r\n    remove(code?: string| rSu.Node){\r\n        let isSuccess = false\r\n        // 删除节点\r\n        var removeNode = (node: rSu.Node) => {\r\n            if(node){\r\n                let NodeType = node.NodeType,\r\n                    value = node.code\r\n                if('ln' == NodeType || 'ln_poly' == NodeType){   // 连线删除\r\n                    let fCode = node.data('from_code'),\r\n                        tCode = node.data('to_code')\r\n                    let fNodeIst = this.nodeDick[fCode],\r\n                        tNodeIst = this.nodeDick[tCode]\r\n                    // 先删除节点后删除连线，连线不存在\r\n                    if(fNodeIst){\r\n                        fNodeIst.rmLine(value)\r\n                    }      \r\n                    if(tNodeIst){\r\n                        tNodeIst.rmLine(value, true)\r\n                    }           \r\n                }\r\n                \r\n                node.delete()\r\n                if(this.nodeDick[value]){\r\n                    delete this.nodeDick[value]\r\n                }else if(this.connDick[value]){\r\n                    delete this.connDick[value]\r\n                }else if(this.textDick[value]){\r\n                    delete this.textDick[value]\r\n                }\r\n                isSuccess = true\r\n                // 选择切换\r\n                let lastElem: rSu.Node = this.last()\r\n                if(lastElem){\r\n                    lastElem.select()\r\n                }\r\n                \r\n            }\r\n        }\r\n        if(!code){\r\n            removeNode(this.select())\r\n        }else if('object' == typeof code){\r\n            removeNode(code)\r\n        }else{\r\n            removeNode(this.nodeDick[code])\r\n        }\r\n        return isSuccess\r\n    }\r\n    /**\r\n     * 循环获取节点， tab 节点选择切换\r\n     * @param {string|null} type 类型 c-conn, t-text\r\n     */\r\n    tab(type?: string){\r\n        var cSelEd: rSu.Node = this.select(),\r\n            code: string = cSelEd? cSelEd.code : null,\r\n            findLastMk: boolean = false,    // 找到最后一个\r\n            successMk: boolean = false,     // 匹配到标志\r\n            nt: string = cSelEd? cSelEd.NodeType: ''    // 节点类型\r\n        \r\n        // 节点选择处理函数            \r\n        var handlerNodeSelFn = (cd: string, node: rSu.Node) => {\r\n            if(!cSelEd){\r\n                node.select()\r\n                successMk = true\r\n                return false\r\n            }else{\r\n                if(findLastMk){     // 正好遍历到\r\n                    this.removeAllSeled()\r\n                    node.select()\r\n                    successMk = true\r\n                    return false\r\n                }\r\n                else if(code == node.code){\r\n                    findLastMk = true\r\n                }\r\n            }\r\n        }\r\n        if('c' == type){    // 连线\r\n            if(nt && ('ln' != nt || <string>'ln_poly' != nt)){\r\n                this.removeAllSeled()\r\n            }\r\n            Util.each(this.connDick, (cd: string, node: rSu.Node) => {\r\n                return handlerNodeSelFn(cd, node)\r\n            })\r\n        }\r\n        else if('t' == type){\r\n            if(nt && ('text' != nt)){\r\n                this.removeAllSeled()\r\n            }\r\n            Util.each(this.textDick, (cd: string, node: rSu.Node) => {\r\n                return handlerNodeSelFn(cd, node)\r\n            })\r\n        }\r\n        else{\r\n            let isUnNode: boolean = false\r\n            if(nt){\r\n                if('ln' == nt || <string>'ln_poly' == nt){\r\n                    isUnNode = true\r\n                }else if('text' == nt){\r\n                    isUnNode = true\r\n                }\r\n            }\r\n            if(isUnNode){\r\n                this.removeAllSeled()\r\n            }\r\n            Util.each(this.nodeDick, (cd: string, node: rSu.Node) => {\r\n                return handlerNodeSelFn(cd, node)\r\n            })\r\n        }\r\n        // 没有找到时从新开始，且存在元素\r\n        if(findLastMk && !successMk){\r\n            this.removeAllSeled()\r\n            this.tab(type)\r\n        }\r\n    }\r\n    /**\r\n     * 节点复制\r\n     * @param {string} code \r\n     */\r\n    clone(code?: string | rSu.Node): rSu.Node{\r\n        let node: rSu.Node,\r\n            newNode: rSu.Node,\r\n            $this = this\r\n        if(code && 'string' == typeof code){\r\n            node = this.nodeDick[code]\r\n        }else if(code && 'object' == typeof code){\r\n            node = code\r\n        }else{\r\n            node = this.select()\r\n        }\r\n        if(node){\r\n            let newOpt: rSu.NodeOpt = $.extend(true, {}, node.opt),\r\n                rate = 0.2\r\n            newOpt.cx += newOpt.w * rate\r\n            newOpt.cy += newOpt.h * rate\r\n            newNode = this.ndMer.make(node.NodeType, newOpt)\r\n                .creator()\r\n                .moveable({\r\n                    beforeMv: function(node: rSu.Node){\r\n                        if($this.previewMk){\r\n                            return false\r\n                        }\r\n                    },\r\n                    afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                        $this._lineMoveSync(x, y, node)\r\n                    }\r\n                })\r\n            // 切换选中状态\r\n            this.removeAllSeled()\r\n            newNode.select()\r\n            this._nodeBindEvt(newNode)\r\n            let ndType = newNode.NodeType\r\n            if('text' == ndType){\r\n                let tIdx = this._order('t', 'T')\r\n                newNode.data('_code', tIdx)\r\n                this.textDick[tIdx] = newNode\r\n            }\r\n            else{\r\n                let _index = this._order('n', 'A')\r\n                // 保存到字典中\r\n                newNode.data('_code', _index)\r\n                this.nodeDick[_index] = newNode\r\n            }\r\n            \r\n        }\r\n        return newNode\r\n    }\r\n    /**\r\n     * 粘贴\r\n     */\r\n    paste(data: rSu.bsMap){\r\n        let $this = this;\r\n        data = 'object' == typeof data? data : []\r\n        Util.each(data, (i: number, dd: rSu.bsMap) => {\r\n            let {code, opt, NodeType, type} = dd,\r\n                rate = 0.2\r\n            opt.cx += opt.w * rate\r\n            opt.cy += opt.h * rate\r\n            let newNode = this.ndMer.make(NodeType, opt)\r\n                .creator()\r\n                \r\n            if('node' == type){\r\n                newNode.moveable({\r\n                    beforeMv: function(node: rSu.Node){\r\n                        if($this.previewMk){\r\n                            return false\r\n                        }\r\n                    },\r\n                    afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                        $this._lineMoveSync(x, y, node)\r\n                    }\r\n                })\r\n                let _index = this._order('n', 'A', code)\r\n                // 保存到字典中\r\n                newNode.data('_code', _index)\r\n                this.nodeDick[_index] = newNode\r\n            }\r\n            else if('conn' == type){\r\n                this._nodeBindEvt(newNode)\r\n                // 保存到字典中\r\n                let _index = this._order('c', 'C', code)\r\n                newNode.data('_code', _index)\r\n                this.connDick[_index] = newNode\r\n            }\r\n            else if('text' == type){\r\n                this._lineBindEvt(newNode)\r\n                // 保存到字典中\r\n                let _index = this._order('t', 'T', code)\r\n                newNode.data('_code', _index)\r\n                this.textDick[_index] = newNode\r\n            }\r\n        })\r\n        return this\r\n    }\r\n    /**\r\n     * 获取赋值的结果数据\r\n     * 复制\r\n     */\r\n    copy(): rSu.bsMap[]{\r\n        // >>>\r\n            //>> [{code:code, opt: nodeOpt, cls: ''}]\r\n        var data: rSu.bsMap[] = []\r\n        var pushToData = (code: string, type: string, node: rSu.Node) => {\r\n            data.push({\r\n                code, \r\n                opt: $.extend(true, {}, node.opt),\r\n                NodeType: node.NodeType,\r\n                type\r\n            })\r\n        }\r\n        Util.each(this.nodeDick, (code: string, node: rSu.Node) => {\r\n            if(node.isSelEd){\r\n                pushToData(code, 'node', node)\r\n            }\r\n        })\r\n        Util.each(this.connDick, (code: string, node: rSu.Node) => {\r\n            if(node.isSelEd){\r\n                pushToData(code, 'conn', node)\r\n            }\r\n        })\r\n        Util.each(this.textDick, (code: string, node: rSu.Node) => {\r\n            if(node.isSelEd){\r\n                pushToData(code, 'text', node)\r\n            }\r\n        })\r\n        return data\r\n    }\r\n    /**\r\n     * 获取选中的实例\r\n     */\r\n    select(): rSu.Node{     \r\n        var selectedNode: rSu.Node = null\r\n        // 节点扫描\r\n        Util.each(this.nodeDick, (k: string, node: rSu.Node) => {\r\n            if(node.isSelEd){\r\n                selectedNode = node\r\n                return false\r\n            }\r\n        })\r\n        // 连线扫描\r\n        if(!selectedNode){\r\n            Util.each(this.connDick, (k: string, node: rSu.Node) => {\r\n                if(node.isSelEd){\r\n                    selectedNode = node\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        // 扫描文本\r\n        if(!selectedNode){\r\n            Util.each(this.textDick, (k: string, node: rSu.Node) => {\r\n                if(node.isSelEd){\r\n                    selectedNode = node\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        return selectedNode\r\n    }\r\n    /**\r\n     * 获取节点属性\r\n     * @memberof WorkerEditor\r\n     */\r\n    step(node?: string | rSu.Node){\r\n        node = node? node: this.select()\r\n        if('object' != typeof node){\r\n            node = this.connDick[<string>node]\r\n        }\r\n        let step: rSu.bsMap,\r\n            _srroo: rSu.bsMap\r\n        if(node){\r\n            let {conLns} = node,\r\n                {from, to} = conLns,\r\n                fromQue: string[] = [],\r\n                toQue: string[] = []\r\n            // 起点\r\n            Util.each(from, (idx: number, cc: string) => {\r\n                let cnIst = this.connDick[cc]\r\n                if(cnIst){\r\n                    let tCode = cnIst.data('to_code'),\r\n                        tPosi = cnIst.data('to_posi')\r\n                    toQue.push(cnIst.data('to_code'))\r\n                }\r\n            })\r\n            // 终点\r\n            Util.each(to, (idx: number, cc: string) => {\r\n                let cnIst = this.connDick[cc]\r\n                if(cnIst){\r\n                    let fCode = cnIst.data('from_code'),\r\n                        fPosi = cnIst.data('from_posi')\r\n                    fromQue.push(cnIst.data('from_code'))\r\n                }\r\n            })\r\n            step = {}\r\n            // 正式数据\r\n            step.code = node.code\r\n            step.name = node.name\r\n            step.type = node.type            \r\n            step.next = toQue.join(',')\r\n            step.prev = fromQue.join(',')\r\n            // 坐标点属性值\r\n            _srroo = {\r\n                opt: node.opt,\r\n                NodeType: node.NodeType\r\n            }\r\n            let nStep = this.onStep(node, step)\r\n            if(nStep){\r\n                step = <rSu.bsMap>nStep\r\n            }\r\n        }\r\n        return {\r\n            step,\r\n            _srroo\r\n        }\r\n    }\r\n    /**\r\n     * 保存，且获取数据\r\n     * \r\n     * @memberof WorkerEditor\r\n     */\r\n    save(){\r\n        var stepStru: any[] = [],\r\n            nodeSrroo: rSu.bsMap = {},\r\n            line: rSu.bsMap = {},\r\n            text: rSu.bsMap = {},\r\n            _srroo: rSu.bsMap = {}\r\n\r\n        Util.each(this.nodeDick, (code: string, node: rSu.Node) => {\r\n            let stepData = this.step(node)\r\n            stepStru.push(stepData.step)\r\n            nodeSrroo[code] = stepData._srroo\r\n        })\r\n            \r\n        // 连线\r\n        Util.each(this.connDick, (cd: string, ist: rSu.Node) => {\r\n            line[cd] = {\r\n                data: ist.data(),\r\n                NodeType: ist.NodeType,\r\n                opt: ist.opt\r\n            }\r\n        })\r\n        // 文本\r\n        Util.each(this.textDick, (cd: string, ist: rSu.Node) => {\r\n            text[cd] = {\r\n                data: ist.data(),\r\n                NodeType: ist.NodeType,\r\n                opt: ist.opt\r\n            }\r\n        })\r\n        _srroo = {node: nodeSrroo, line, text}\r\n        return {\r\n            step: stepStru,\r\n            _srroo\r\n        }\r\n    }\r\n    /**\r\n     * 数据加载\r\n     * @param {any} data \r\n     * @returns \r\n     * @memberof WorkerEditor\r\n     */\r\n    load(data: any){        \r\n        let $this = this,\r\n            lineQue: rSu.bsMap = {}\r\n        let {step, _srroo} = data\r\n\r\n        // 过渡代码删除\r\n        //>>>>>> 历史版本兼容 >>>>>\r\n        if(!_srroo.node){\r\n            let _srrooNode: rSu.bsMap = {}\r\n            Util.each(step, (cd: string, row: rSu.bsMap) => {\r\n                if(row._srroo){\r\n                    _srrooNode[cd] = row._srroo\r\n                }else{\r\n                    return false\r\n                }\r\n            })\r\n            _srroo.node = _srrooNode\r\n        }\r\n        //>>>>>> 历史版本兼容 >>>>>\r\n\r\n        // 文件加载以后才显示\r\n        let config = this.config,\r\n            rCodes: string| string[] = config.rCodes || null,\r\n            bkg: rSu.bsMap = config.bkg || {},\r\n            ranNodeBkg = bkg.ranNode || '',\r\n            icon: rSu.bsMap = config.icon || {}   \r\n\r\n        rCodes = rCodes? ('object' == typeof rCodes? rCodes: [rCodes]): []\r\n        let runingCd: string = null //  正在运行的脚本\r\n\r\n        let rCodesTmp: string[] = []\r\n        Util.each(rCodes, (i: number, rc: string) => {\r\n            if(rc.indexOf('*') > -1){\r\n                runingCd = rc.replace('*', '')\r\n            }else{\r\n                rCodesTmp.push(rc)\r\n            }\r\n        })\r\n        rCodes = rCodesTmp\r\n\r\n        // 节点生成复原\r\n        Util.each(_srroo.node, (cd: string, nd: rSu.bsMap) => {\r\n            // 节点生成\r\n            nd.opt.bkg = bkg.urunNd || '#CDC5BF'\r\n            nd.opt.bkgTxt = bkg.urunTxt || '#000000'\r\n            let $node = this.ndMer.make(nd.NodeType, nd.opt)\r\n                .creator()\r\n                .moveable({\r\n                    beforeMv: function(node: rSu.Node){\r\n                        if($this.previewMk){\r\n                            return false\r\n                        }\r\n                    },\r\n                    afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                        $this._lineMoveSync(x, y, node)\r\n                        \r\n                        // 图标处理\r\n                        let icon:RaphaelElement = $node.tRElem['icon']\r\n                        if(icon){\r\n                            let iconP = $node.getIconP()\r\n                            icon.attr({\r\n                                x: iconP.x,\r\n                                y: iconP.y\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            // 保存到字典中\r\n            $node.data('_code', cd)\r\n            let cdIdx = Util.inArray(cd, <any[]>rCodes)\r\n            // 生成图标\r\n            if(cdIdx > -1){ // 已经运行\r\n                $node.data('state', 'isRunEd')\r\n                let iconP: rSu.P = $node.getIconP()\r\n                if(iconP){\r\n                    let iconState: rSu.bsMap = icon.state || {}\r\n                    let rect: number = 10\r\n                    $node.tRElem['icon'] = this.paper.image(iconState.ran || 'state_ran.png', iconP.x, iconP.y, rect, rect)\r\n                }\r\n                $node.opt.bkg = bkg.ranNd || '#32CD32'\r\n                $node.opt.bkgTxt = bkg.ranTxt || '#FFFFFF'\r\n                $node.background(['node', 'text'])\r\n            }\r\n            else if(runingCd && cd == runingCd){    // 正在运行\r\n                $node.data('state', 'runingCd')\r\n                let iconP: rSu.P = $node.getIconP()\r\n                if(iconP){\r\n                    let iconState: rSu.bsMap = icon.state || {}\r\n                    let rect: number = 15\r\n                    $node.tRElem['icon'] = this.paper.image(iconState.runing || 'state_running.png', iconP.x, iconP.y, rect, rect)\r\n                }\r\n                $node.opt.bkg = bkg.runningNd || '#0000FF'\r\n                $node.opt.bkgTxt = bkg.runningTxt || '#FFFFFF'\r\n                $node.background(['node', 'text'])\r\n            }\r\n            \r\n            this._nodeBindEvt($node)\r\n            $this.nodeDick[cd] = $node\r\n        })\r\n        // 连线生成处理\r\n        Util.each(_srroo.line, (cd: string, ln: rSu.bsMap)=>{\r\n            let _data = ln.data\r\n            let $ln = this.ndMer.make(ln.NodeType, ln.opt)\r\n                .creator()\r\n                .moveable({\r\n                    beforeMv: function(node: rSu.Node){\r\n                        if($this.previewMk){\r\n                            return false\r\n                        }\r\n                    },\r\n                    afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                        $this._lineMoveSync(x, y, node)\r\n                    }\r\n                })\r\n            \r\n            $ln.data('_code', cd)     \r\n            $ln.data(_data)\r\n            \r\n            let fCode = _data.from_code,\r\n                tCode = _data.to_code\r\n            let fIst = this.nodeDick[fCode],\r\n                tIst = this.nodeDick[tCode]\r\n\r\n            this._lineBindEvt($ln)\r\n            this.connDick[cd] = $ln\r\n\r\n            if(fIst){   // 起点\r\n                fIst.line(cd)\r\n            }\r\n            if(tIst){   // 终点\r\n                tIst.line(cd, true)\r\n                let nodeBkg: string = tIst.opt.bkg\r\n                $ln.opt.bkg = nodeBkg\r\n                $ln.c.attr('stroke', nodeBkg)\r\n                // 箭头，箭体颜色一致性变化\r\n                if($ln.inlineEle){\r\n                    $ln.inlineEle.attr('stroke', nodeBkg)\r\n                    $ln.inlineEle.attr('fill', nodeBkg)\r\n                }\r\n            }\r\n        })\r\n        // 文本生成\r\n        Util.each(_srroo.text, (cd: string, dd: rSu.bsMap) => {\r\n            let _data = dd.data\r\n            let $ist = this.ndMer.make(dd.NodeType, dd.opt)\r\n                .creator()\r\n                .moveable({\r\n                    beforeMv: function(node: rSu.Node){\r\n                        if($this.previewMk){\r\n                            return false\r\n                        }\r\n                    },\r\n                    afterUpd: function(x: number, y: number, node: rSu.Node){\r\n                        $this._lineMoveSync(x, y, node)\r\n                    }\r\n                })\r\n            $ist.data('_code', cd)            \r\n            $ist.data(_data)\r\n\r\n            this._nodeBindEvt($ist)\r\n            this.textDick[cd] = $ist\r\n        })\r\n        return this\r\n    }\r\n    // removeTmpNode(value?: any){\r\n    removeTmpNode(value?: string | string[]){\r\n       if(value){\r\n           let queue: string[] = []\r\n           if('object' == typeof value){\r\n               queue = value\r\n           }else{\r\n               queue = [value]\r\n           }\r\n           Util.each(queue, (k:number, v: string) => {\r\n                if(this.tmpNodeMap[v]){\r\n                    this.tmpNodeMap[v].delete()\r\n                    delete this.tmpNodeMap[v]\r\n                }\r\n            })\r\n       }\r\n       else{\r\n           Util.each(this.tmpNodeMap, (k: string, nd: rSu.Node) => {\r\n                nd.delete()\r\n                delete this.tmpNodeMap[k]\r\n           })\r\n       }\r\n       return this\r\n    }\r\n   /**\r\n    * 通过点坐标计算相碰撞的元素\r\n    */\r\n    collisionByP(x: number|rSu.NodeOpt, y?: number): rSu.Node{\r\n       let tmpNode: rSu.Node\r\n       // 点坐标自动转换\r\n       if('object' == typeof x){\r\n           let nX = x.x,\r\n            nY = x.y\r\n            x = nX\r\n            y = nY\r\n       }\r\n       if(x && y){\r\n           Util.each(this.nodeDick, (index: number, nd: rSu.Node) => {\r\n               let boxdt = nd.getBBox(),\r\n                {attr, ps} = boxdt,\r\n                {width, height} = attr,\r\n                x1 = attr.x,\r\n                y1 = attr.y\r\n                if(\r\n                    (x >= x1 && x <= x1 + width) &&\r\n                    (y >= y1 && y <= y1 + height)\r\n                ){\r\n                    tmpNode = nd\r\n                    return false\r\n                }\r\n           })\r\n       }\r\n       return tmpNode\r\n    }\r\n    /**\r\n     * 预览，启动预览\r\n     * @param disable 是否禁止\r\n     */\r\n    preview(disable?: boolean){\r\n        if(disable){\r\n            if(this.toolbarCtrl){\r\n                this.toolbarCtrl.show()\r\n            }\r\n            this.previewMk = false\r\n        }\r\n        else{\r\n            // 隐藏工具栏\r\n            if(this.toolbarCtrl){\r\n                this.toolbarCtrl.hide()\r\n            }\r\n            this.previewMk = true\r\n        }\r\n    }\r\n    /**\r\n     * dom 监听\r\n     */\r\n    _domListener(){\r\n        let {dom} = this.config,\r\n            $this = this\r\n        // 双击\r\n        dom.find('svg').dblclick(function(){\r\n            $this.removeAllSeled()\r\n        })\r\n    }\r\n    /**\r\n     * 操作助手事件\r\n     */\r\n    operHelpEvts(){\r\n        let {config} = this,\r\n            {dom} = config,\r\n            $this = this\r\n        // tabindex =\"0\" 是元素可以聚焦，outline 取消边框\r\n        dom.attr('tabindex', '0')\r\n            .css({'outline':'none'})\r\n        dom.off('keydown').on('keydown', function(evt: any){\r\n            let code = evt.keyCode\r\n            // console.log(code)\r\n            // shift + \r\n            if(evt.shiftKey){\r\n                // 基本操作\r\n                if(68 == code){\t// shift + D\t删除当前的选择节点\r\n                    $this.remove()\r\n                }\r\n                else if(84 == code){ // shitf + T tab 循环\r\n\t\t\t\t\t$this.tab()\r\n                }\r\n                else if(67 == code){    // shift + C tab 循环 conn\r\n                    $this.tab('c')\r\n                }\r\n                else if(76 == code){    // shift + L tab 循环 text/lable\r\n                    $this.tab('t')\r\n                }\r\n                else if(65 == code){ // shift + A 全选择\r\n\t\t\t\t\t$this.allSelect()\r\n                }\r\n                else if(82 == code){    // shift + R 删除\r\n\t\t\t\t\t$this.allRemove();\r\n                }\r\n                else if(86 == code){ // shitf + v 克隆\r\n\t\t\t\t\t$this.clone();\r\n                }\r\n                \r\n                // 移动，方向移动：缩放\r\n                else if($.inArray(code, [38, 40, 37, 39, 107, 109]) > -1){\r\n                    var nodeSelEd: rSu.Node = $this.select()\r\n                    if(nodeSelEd){\r\n                        switch(code){\r\n                            case 38: nodeSelEd.move2T(); break;\r\n                            case 40: nodeSelEd.move2B(); break;\r\n                            case 37: nodeSelEd.move2L(); break;\r\n                            case 39: nodeSelEd.move2R(); break;\r\n                            case 107: nodeSelEd.zoomOut(); break;\r\n                            case 109: nodeSelEd.zoomIn(); break;\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    // 键盘\r\n                    if(config.onKeydown && 'function' == typeof config.onKeydown){\r\n                        config.onKeydown(code, $this)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 双击事件\r\n     * @param node \r\n     */\r\n    onDbClick(node: rSu.Node){}\r\n    /**\r\n     * 点击事件\r\n     * @param node \r\n     */\r\n    onClick(node: rSu.Node){}\r\n    /**\r\n     * 节点保存时处理事件\r\n     * @param node \r\n     * @return {object|null} 返回值时可以覆盖参数\r\n     */\r\n    onStep(node: rSu.Node, data: any): any{\r\n        return data\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/WorkerEditor.ts","/**\r\n * 2018年1月8日 星期一\r\n * 内部处理类，从 worker.js/flow.js 内部分离\r\n */\r\n\r\n// import {Raphael} from './rSu'\r\n\r\n// 外部对象申明\r\ndeclare var Raphael: any\r\ndeclare var $:any\r\n\r\ninterface numberMap {\r\n    [k: number]: any\r\n}\r\n\r\n\r\n\r\n// 实例索引序列\r\nvar instanceIndex = 0\r\nvar instanceSource: numberMap = {}     // 实列资源队列\r\n\r\n// 内部协助函数(私有)\r\nclass H{\r\n    /**\r\n     * 内部函数生成实例\r\n     * @param {*} config \r\n     */\r\n    static createInstance(config?: any){\r\n        config = 'object' == typeof config? config:{}\r\n        if(!config.dom){\r\n            if(process.env.NODE_ENV !== 'production'){\r\n                console.warn('[Worker] 配置文件无效，缺少 config.dom')\r\n            }\r\n        }\r\n        // 生成 HTML\r\n        if('string' == typeof config.dom){\r\n            config.dom = $(config.dom)\r\n        }\r\n        if(!config.w){\r\n            // config.w = parseInt(width * 1.1)\r\n            config.w = $(window).width() * 1.1\r\n        }\r\n        if(!config.h){\r\n            config.h = $(window).height() * 1.1\r\n        }\r\n        return Raphael(config.dom.get(0), config.w, config.h)\r\n    }\r\n    static onMoveEvt(){}\r\n    static onStartEvt(){}\r\n    static onEndEvt(){}\r\n    /**\r\n     * 内部索引序列\r\n     */\r\n    static getIndex(){\r\n        instanceIndex += 1\r\n        return instanceIndex\r\n    }\r\n    /**\r\n     * 内部资源处理\r\n     * @param {number} index \r\n     * @param {string|null} key \r\n     * @param {*} value \r\n     */\r\n    static src(index: number, key?:any, value?: any){\r\n        if(!instanceSource[index]){\r\n            instanceSource[index] = {}\r\n        }\r\n        var dd = instanceSource[index]\r\n        if('undefined' == typeof key){\r\n            return dd\r\n        }\r\n        if('undefined' == typeof value){\r\n            return dd[key] || null\r\n        }\r\n        dd[key] = value\r\n    }\r\n}\r\n\r\nexport default H\n\n\n// WEBPACK FOOTER //\n// ./src/helper.ts","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 9\n// module chunks = 0","\n    export interface VersionStruct {\n        version?: string\n        release?: string\n        author?: string\n        name?: string\n    }\n    export const LibVersion: VersionStruct = {\"version\":\"2.2.0\",\"release\":\"20180507\",\"author\":\"Joshua Conero\",\"name\":\"zmapp-workflow-ts\"}\n    \n\n\n// WEBPACK FOOTER //\n// ./version.ts","import { NodeQue } from \"./NodeQue\";\r\nimport ObjX from \"./ObjX\";\r\nimport { Util } from \"./util\";\r\nimport { cNode } from \"./confNode\";\r\n\r\n/**\r\n * 2018年3月29日 星期四\r\n * 工具栏\r\n */\r\n\r\nexport default class ToolBar{\r\n    private paper: RaphaelPaper\r\n    option: rSu.bsMap       // 全局参数配置\r\n    config: rSu.bsMap       // 工具栏接口配置 {option: config}\r\n    private ndMer: rSu.NodeQue\r\n    headElems: rSu.MapRElm  // 头部元素集合\r\n    nodeElems: rSu.MapRElm  // 节点元素集合\r\n    connElems: rSu.MapRElm  // 连接元素集合\r\n    rData: {      // 运行处理时间\r\n        [k: string]: any\r\n        cp: rSu.P                // 中心点坐标\r\n        th0: number,             // 顶级标题高度\r\n        th1: number,             // 节点工具\r\n        th2: number,             // 联系工具\r\n        nh: number,              // 节点运行高度\r\n        ch: number,              // 连接节点运行高度\r\n        cw: number               // 整个容器的宽度\r\n    }\r\n    // title node 基本标题框节点\r\n    // 标题容器中的节点数\r\n    tBodyNds: rSu.mapNode\r\n\r\n    // 连接线\r\n    // 标题容器中的节点数\r\n    cBodyNds: rSu.mapNode\r\n\r\n    protected _tools: RaphaelElement[] = []     // 工具栏\r\n    constructor(paper: RaphaelPaper, opt?: rSu.bsMap){\r\n        this.rData = {\r\n            cp: {x: 5, y: 5},\r\n            th0: 23,            // 顶级标题高度\r\n            th1: 23,            // 节点工具\r\n            th2: 23,            // 联系工具\r\n            nh: 0,              // 节点运行高度\r\n            ch: 0,              // 连接节点运行高度\r\n            cw: 75              // 整个容器的宽度\r\n        }\r\n        this.paper = paper\r\n        this.ndMer = new NodeQue(this.paper)\r\n        this.option = opt\r\n        this.config = opt.toolBar || {}\r\n        this.config.aUpSrc = ObjX.value(this.config, 'aUpSrc', 'arrow_up.png')\r\n        this.config.aDownSrc = ObjX.value(this.config, 'aDownSrc', 'arrow_down.png')\r\n        this._headBar()\r\n        this._nodeBar()\r\n        this._connBar()\r\n    }\r\n    /**\r\n     * 标题栏\r\n     */\r\n    private _headBar(){\r\n        var $this = this,\r\n            {cp, cw, th0} = this.rData,\r\n            {x, y} = cp,\r\n            paper = this.paper,\r\n            ist: RaphaelElement\r\n        \r\n        this.headElems = {}\r\n\r\n        ist = paper.rect(x, y, cw, th0)\r\n            .attr('fill', '#ffffff')\r\n            .click(function(){\r\n                let toggle = this.data('toggle')\r\n                if(toggle != 'H'){\r\n                    this.data('toggle', 'H')\r\n                    $this.toggle('H')\r\n                }else{\r\n                    this.data('toggle', 'S')\r\n                    $this.toggle('S')\r\n                }\r\n            })\r\n        this.headElems['icon'] = ist\r\n        \r\n        ist = paper.text(x + (cw/2), y+10, ObjX.value(this.config, 'title', '工具栏'))\r\n        this.headElems['title'] = ist\r\n    }\r\n    /**\r\n     * 节点栏\r\n     */\r\n    private _nodeBar(){\r\n        var $this = this,\r\n            {cp, cw, th1, nh} = this.rData,\r\n            {x, y} = cp,\r\n            {paper, ndMer, config} = this,\r\n            ist: rSu.Node,\r\n            tBodyNds: rSu.mapNode = {}         // 内部缓存的节点\r\n            \r\n        \r\n        this.nodeElems = {}\r\n        let menuSeting: any = config.menu || false          // 菜单设置性\r\n        if(!menuSeting){        // 默认菜单项\r\n            menuSeting = [\r\n                'begin', 'task', 'sign', 'cond', \r\n                'subFlow', 'parallel', 'merge', 'end',\r\n                'text'\r\n            ]\r\n            ;\r\n        }\r\n\r\n        y += th1\r\n        // data: toggle => H/S\r\n        this.nodeElems['title'] = paper.rect(x, y, cw, 23)\r\n            .attr('fill', '#ffffff')\r\n            .click(function(){\r\n                // console.log(this)\r\n                let toggle = this.data('toggle')\r\n                let iconIst = $this.nodeElems['icon']\r\n                if(toggle != 'H'){\r\n                    this.data('toggle', 'H')\r\n                    if(iconIst){\r\n                        iconIst.attr('src', config.aDownSrc)\r\n                    }\r\n                    $this.tToggle('H')\r\n                }else{\r\n                    this.data('toggle', 'S')\r\n                    if(iconIst){\r\n                        iconIst.attr('src', config.aUpSrc)\r\n                    }\r\n                    $this.tToggle('S')\r\n                }\r\n            })\r\n        this.nodeElems['icon'] = paper.image(config.aUpSrc, x+cw*0.7, y+1, 20, 20)\r\n\r\n        nh = y        \r\n        y += 23\r\n        this.nodeElems['tBody'] = paper.rect(x, y, cw, 250)\r\n            .attr('fill', '#ffffff')\r\n        \r\n        // 数据处理\r\n        x += 32\r\n        Util.each(menuSeting, (mk: string|number, row: any) => {\r\n            if('object' != typeof row){\r\n                mk = row\r\n                row = {}\r\n            }\r\n            if(!cNode[mk]){\r\n                return\r\n            }\r\n            // console.log(mk)\r\n            y += 32\r\n            let text = row.text || cNode[mk].text,\r\n                cx = x,\r\n                cy = y\r\n            \r\n            // 特殊坐标调整（坐标修正）\r\n            if('parallel' == mk){\r\n                cy += 5\r\n                cx += 20\r\n            }\r\n            else if('merge' == mk){\r\n                cy += 5\r\n                cx += 20\r\n            }\r\n\r\n            ist = ndMer.make(<string>mk, {cx, cy, w: 40, h: 20, text: text})\r\n                .creator()\r\n            if(ist.label){\r\n                ist.label.attr('fill', '#FF8C00')\r\n                // ist.label.attr('fill', '#FFA500')\r\n                \r\n            }\r\n            // 特殊节点处理\r\n            if('text' == mk){\r\n                ist.c.attr({\r\n                    'font-size': 15,\r\n                    'stroke': 'none'\r\n                })\r\n            }\r\n\r\n            tBodyNds[<string>mk] = ist\r\n        })\r\n\r\n        this.tBodyNds = tBodyNds\r\n        this.rData.nh = y - nh\r\n        this.nodeElems['tBody'].attr('height', this.rData.nh)\r\n    }\r\n    /**\r\n     * 连线栏\r\n     */\r\n    private _connBar(){\r\n        var $this = this,\r\n            {cp, cw, th2, ch, th0, th1, nh} = this.rData,\r\n            {x, y} = cp,\r\n            {paper, ndMer, config} = this,\r\n            ist: rSu.Node,\r\n            cBodyNds: rSu.mapNode = {}         // 内部缓存的节点\r\n            \r\n        this.connElems = {}\r\n        // 连接线\r\n        // data: toggle => H/S\r\n        y += th0 + th1 + nh\r\n\r\n        this.connElems['title'] = paper.rect(x, y, cw, th2)\r\n            .attr('fill', '#ffffff')\r\n            .click(function(){\r\n                // console.log(this)\r\n                let toggle = this.data('toggle')\r\n                let iconIst = $this.connElems['icon']\r\n                if(toggle != 'H'){\r\n                    this.data('toggle', 'H')\r\n                    if(iconIst){\r\n                        iconIst.attr('src', config.aDownSrc)\r\n                    }\r\n                    $this.cToggle('H')\r\n                }else{\r\n                    this.data('toggle', 'S')\r\n                    if(iconIst){\r\n                        iconIst.attr('src', config.aUpSrc)\r\n                    }\r\n                    $this.cToggle('S')\r\n                }\r\n            })\r\n        this.connElems['icon'] = paper.image(config.aUpSrc, x+cw*0.7, y+1, 20, 20)\r\n        \r\n        // y += 23\r\n        ch = y\r\n        y += th2\r\n        let prevH = 60  // 预处理高度\r\n        this.config['lnSeledBkg'] = this.config['lnSeledBkg'] || '#CCFF99'\r\n        this.config['lnDefBkg'] = this.config['lnDefBkg'] || '#ffffff'\r\n        let {lnDefBkg} = this.config\r\n\r\n        this.connElems['lnCon'] = paper.rect(x, y, cw, prevH/2)\r\n            .attr('fill', lnDefBkg)\r\n            // .attr(conAttr)\r\n        let ly = y + prevH/4*0.7,\r\n            lx = x + 20\r\n        ist = ndMer.make('ln', {\r\n            P1: {x: lx-5, y: ly},\r\n            P2: {x: lx+25, y: ly}\r\n        })\r\n            .creator()\r\n        cBodyNds.ln = ist\r\n        \r\n\r\n        // 折线\r\n        y += 20\r\n        this.connElems['lnPolyCon'] = paper.rect(x, y, cw, prevH/2)\r\n            .attr('fill', lnDefBkg)\r\n            // .attr(conAttr)\r\n        ly = y + prevH/4*0.7,\r\n            lx = x + 20\r\n        ist = ndMer.make('lnPoly', {\r\n            P1: {x: lx-5, y: ly},            \r\n            P2: {x: lx+20, y: ly + 4},\r\n            h: 4\r\n        })\r\n            .creator()\r\n        cBodyNds.lnPoly = ist\r\n\r\n        this.cBodyNds = cBodyNds\r\n        ch = y - ch\r\n        this.connElems['lnCon'].attr('height', ch/2)\r\n        this.connElems['lnPolyCon'].attr('height', ch/2)\r\n    }\r\n    /**\r\n     * 连线框占据节点框\r\n     */\r\n    connSizeNode(backMk?: boolean){\r\n        var {title, icon, lnCon, lnPolyCon} = this.connElems,\r\n            {cp, cw, th2, ch, th0, th1, nh} = this.rData,\r\n            {x, y} = cp,\r\n            {ln, lnPoly} = this.cBodyNds\r\n\r\n        y += backMk? th0 + th1 + nh: th0 + th1\r\n        title.attr('y', y)\r\n        icon.attr('y', y+1)\r\n        \r\n        y += th2\r\n        let prevH = 60  // 预处理高度\r\n        lnCon.attr('y', y)\r\n\r\n        // 直线\r\n        let ly = y + prevH/4*0.7,\r\n            lx = x + 20\r\n        ln.updAttr({\r\n            P1: {x: lx-5, y: ly},\r\n            P2: {x: lx+25, y: ly}\r\n        })\r\n\r\n        // 折线\r\n        y += 20\r\n        lnPolyCon.attr('y', y)\r\n        ly = y + prevH/4*0.7,\r\n            lx = x + 20\r\n        lnPoly.updAttr({\r\n            P1: {x: lx-5, y: ly},            \r\n            P2: {x: lx+20, y: ly + 4},\r\n            h: 4\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 标题栏显示与隐藏\r\n     * @param {string} type 显示与隐藏， H/S\r\n     * @param {boolean} includeTit 包含标题\r\n     */\r\n    tToggle(type?:string, includeTit?: boolean){\r\n        var tBodyNds = this.tBodyNds,\r\n            nodeElems = this.nodeElems,\r\n            {tBody} = nodeElems\r\n        if('H' != type){\r\n            Util.each(tBodyNds, (k: number, nd: rSu.Node) => {\r\n                nd.show()\r\n            })\r\n            if(includeTit){\r\n                nodeElems.title.show()\r\n                nodeElems.icon.show()\r\n            }\r\n            if(tBody){\r\n                tBody.show()\r\n            }\r\n            this.connSizeNode(true)\r\n        }\r\n        else{\r\n            Util.each(tBodyNds, (k: number, nd: rSu.Node) => {\r\n                nd.hide()\r\n            })\r\n            if(includeTit){\r\n                nodeElems.title.hide()\r\n                nodeElems.icon.hide()\r\n            }\r\n            if(tBody){\r\n                tBody.hide()\r\n            }\r\n            this.connSizeNode()\r\n        }\r\n    }\r\n    /**\r\n     * 标题栏显示与隐藏\r\n     * @param {string} type 显示与隐藏， H/S\r\n     */\r\n    cToggle(type?:string, includeTit?: boolean){\r\n        var cBodyNds = this.cBodyNds,\r\n            connElems = this.connElems,\r\n            {lnCon, lnPolyCon} = connElems\r\n        if('H' != type){\r\n            Util.each(cBodyNds, (k: number, nd: rSu.Node) => {\r\n                nd.show()\r\n            })\r\n            if(includeTit){\r\n                connElems.title.show()\r\n                connElems.icon.show()\r\n            }\r\n            if(lnCon){\r\n                lnCon.show()\r\n            }\r\n            if(lnPolyCon){\r\n                lnPolyCon.show()\r\n            }\r\n        }\r\n        else{\r\n            Util.each(cBodyNds, (k: number, nd: rSu.Node) => {\r\n                nd.hide()\r\n            })\r\n            if(includeTit){\r\n                connElems.title.hide()\r\n                connElems.icon.hide()\r\n            }\r\n            if(lnCon){\r\n                lnCon.hide()\r\n            }\r\n            if(lnPolyCon){\r\n                lnPolyCon.hide()\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 显示与隐藏\r\n     * @param {string} type \r\n     */\r\n    toggle(type?: string){\r\n        this.tToggle(type, true)\r\n        this.cToggle(type, true)\r\n    }\r\n    /**\r\n     * 工具栏显示\r\n     */\r\n    show(){\r\n        this.toggle('S')\r\n        this.cToggle('S')\r\n        Util.each(this.headElems, (k: string, elem: RaphaelElement) => {\r\n            elem.show()\r\n        })\r\n    }\r\n    /**\r\n     * 工具栏隐藏\r\n     */\r\n    hide(){\r\n        this.toggle('H')\r\n        this.cToggle('H')\r\n\r\n        Util.each(this.headElems, (k: string, elem: RaphaelElement) => {\r\n            elem.hide()\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ToolBar.ts","\r\n\r\n/**\r\n * 2018年3月26日 星期一\r\n * 开始\r\n */\r\n///<reference path=\"../../index.d.ts\"/>\r\n\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nexport default class NodeBegin extends NodeAbstract{    \r\n    protected _onInit(){\r\n        this.NodeType = 'begin'\r\n    }\r\n    /**\r\n     * 生成器处理事件\r\n     */\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#851E07'\r\n        var opt = this.opt\r\n        this.c = this.paper.ellipse(opt.cx, opt.cy, opt.w/2, opt.h/2)\r\n        this.c.attr('fill', opt.bkg)\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        var opt = this._updAttr(nOpt)\r\n            .opt\r\n        this.c.attr({\r\n            cx: opt.cx,\r\n            cy: opt.cy,\r\n            rx: opt.w/2,\r\n            ry: opt.h/2\r\n        })\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeBegin.ts","/**\r\n * 2018年3月26日 星期一\r\n * 任务节点\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\"\r\n\r\nexport default class NodeTask extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'task'\r\n    }\r\n    /**\r\n     * 生成器处理事件\r\n     */\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var attr = this.opt2Attr(),\r\n            opt = this.opt,\r\n            {bkg} = opt\r\n        this.c = this.paper.rect(attr.x, attr.y, attr.w, attr.h)\r\n        this.c.attr('fill', bkg)\r\n\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 通过选项映射到节点属性\r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        var opt = nOpt? nOpt : this.opt,\r\n            x = opt.cx - opt.w/2,\r\n            y = opt.cy - opt.h/2,\r\n            w = opt.w,\r\n            h = opt.h\r\n        return {\r\n            x, y, w, h\r\n        }\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var opt = this.opt2Attr()\r\n        var cAttr: rSu.bsMap = {\r\n            x: opt.x,\r\n            y: opt.y,\r\n            width: opt.w,\r\n            height: opt.h\r\n        }\r\n        this.c.attr(cAttr)\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 获取 icon 坐标地址\r\n     */\r\n    getIconP(): rSu.P{\r\n        let p: rSu.P,\r\n            {cx, cy, w, h} = this.opt\r\n        let d = 2\r\n        let x = cx - w/2 + d,\r\n            y = cy - h/2 + d\r\n        p = {x, y}\r\n        return p\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeTask.ts","/**\r\n * 2018年3月26日 星期一\r\n * 审核节点\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\";\r\nexport default class NodeAudit extends NodeAbstract{\r\n    xRate: number           // 移除边框百分比\r\n    protected _onInit(){\r\n        this.NodeType = 'audit'\r\n        this.xRate = 0.20\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var pQue = this.opt2Attr(),\r\n            nOpt = this.opt            \r\n\r\n        this.c = this.paper.path(this._ps2Path(pQue, true))\r\n        this.c.attr('fill', nOpt.bkg)\r\n        // 文字\r\n        if(nOpt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, nOpt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 选项与节点属性的映射\r\n     * @param {obejct|null} opt  选项属性\r\n     * @returns {array} 选项表\r\n     */\r\n    opt2Attr(opt?: rSu.NodeOpt): rSu.P[]{\r\n        var nopt = opt? opt: this.opt,\r\n            cx = nopt.cx,\r\n            cy = nopt.cy,\r\n            w = nopt.w,\r\n            h = nopt.h,\r\n            xRate = this.xRate\r\n\r\n        return [\r\n            {   // A\r\n                x: cx - w/2,\r\n                y: cy - h/2\r\n            },\r\n            {   // B\r\n                x: (cx + w/2) + (w * xRate),\r\n                y: cy - h/2\r\n            },\r\n            {   // C\r\n                x: cx + w/2,\r\n                y: cy + h/2\r\n            },\r\n            {   // D\r\n                x: (cx - w/2) - (w * xRate),\r\n                y: cy + h/2\r\n            }\r\n        ]\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var opt = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(opt, true))\r\n        this.updTextAttr(nOpt.text)  // 文字        \r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeAudit.ts","/**\r\n * 2018年3月26日 星期一\r\n * 会签\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\";\r\nexport default class NodeSign extends NodeAbstract{\r\n    xRate: number           // 移除边框百分比\r\n    protected _onInit(){\r\n        this.NodeType = 'sign'\r\n        this.xRate = 0.20\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var pQue = this.opt2Attr(),\r\n            opt = this.opt,\r\n            {bkg} = opt\r\n        this.c = this.paper.path(this._ps2Path(pQue, true))\r\n        this.c.attr('fill', bkg)\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 选项与节点属性的映射\r\n     * @param {obejct|null} opt  选项属性\r\n     * @returns {array} 选项表\r\n     */\r\n    opt2Attr(opt?: rSu.NodeOpt): rSu.P[]{\r\n        var nopt = opt? opt: this.opt,\r\n            cx = nopt.cx,\r\n            cy = nopt.cy,\r\n            w = nopt.w,\r\n            h = nopt.h,\r\n            xRate = this.xRate\r\n        return [\r\n            {   // A\r\n                x: cx - w/2 - w * xRate,\r\n                y: cy - h/2\r\n            },\r\n            {   // B\r\n                x: (cx + w/2) + (w * xRate),\r\n                y: cy - h/2\r\n            },\r\n            {   // C\r\n                x: cx + w/2,\r\n                y: cy + h/2\r\n            },\r\n            {   // D\r\n                x: cx - w/2,\r\n                y: cy + h/2\r\n            }\r\n        ]\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var opt = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(opt, true))\r\n\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeSign.ts","/**\r\n * 2018年3月26日 星期一\r\n * 条件判断节点\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\";\r\nexport default class NodeCond extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'cond'\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var pQue = this.opt2Attr(),\r\n            opt = this.opt\r\n        this.c = this.paper.path(this._ps2Path(pQue, true))\r\n        this.c.attr('fill', opt.bkg)\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选项与节点属性的映射\r\n     * @param {obejct|null} opt  选项属性\r\n     * @returns {array} 选项表\r\n     */\r\n    opt2Attr(opt?: rSu.NodeOpt): rSu.P[]{\r\n        var nOpt = opt? opt : this.opt,\r\n            cx = nOpt.cx,\r\n            cy = nOpt.cy,\r\n            w = nOpt.w,\r\n            h = nOpt.h\r\n\r\n        return [\r\n            {   // A\r\n                x: cx,\r\n                y: cy - h/2\r\n            },\r\n            {   // B\r\n                x: cx + w/2,\r\n                y: cy\r\n            },\r\n            {   // C\r\n                x: cx,\r\n                y: cy + h/2\r\n            },\r\n            {   // D\r\n                x: cx - w/2,\r\n                y: cy\r\n            }\r\n        ]\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var opt = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(opt, true))\r\n\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeCond.ts","/**\r\n * 2018年3月26日 星期一\r\n * 子流程\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nexport default class NodeSubFlow extends NodeAbstract{\r\n    xRate: number                   // x 主偏移量\r\n    inlinesEle: RaphaelElement[]   // 内部连线线段元素\r\n    protected _onInit(){\r\n        this.NodeType = 'sub_flow'\r\n        this.xRate = 0.15\r\n    }\r\n    /**\r\n     * 生成器处理事件\r\n     */\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var {cAttr, lLine, rLine} = this.opt2Attr(),\r\n            opt = this.opt,\r\n            {bkg} = opt\r\n\r\n        this.c = this.paper.rect(cAttr.x, cAttr.y, cAttr.w, cAttr.h)\r\n        this.c.attr('fill', bkg)\r\n        this.inlinesEle = [\r\n            this.paper.path(this._ps2Path(lLine)),\r\n            this.paper.path(this._ps2Path(rLine))\r\n        ]\r\n\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 通过选项映射到节点属性\r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        var opt = nOpt? nOpt : this.opt,\r\n            x = opt.cx - opt.w/2,\r\n            y = opt.cy - opt.h/2,\r\n            w = opt.w,\r\n            h = opt.h,\r\n            xRate = this.xRate\r\n\r\n        return {\r\n            cAttr: {\r\n                x, y, w, h\r\n            },\r\n            lLine:[\r\n                {x: x + w*xRate, y: y},\r\n                {x: x + w*xRate, y: y + h}\r\n            ],\r\n            rLine:[\r\n                {x: x + w - w*xRate, y: y},\r\n                {x: x + w - w*xRate, y: y + h}\r\n            ]\r\n        }\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var {cAttr, lLine, rLine} = this.opt2Attr()\r\n        this.c.attr({\r\n            x: cAttr.x, y: cAttr.y, width: cAttr.w, height: cAttr.h\r\n        })\r\n        this.inlinesEle[0].attr('path', this._ps2PathAttr(lLine))\r\n        this.inlinesEle[1].attr('path', this._ps2PathAttr(rLine))\r\n\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeSubFlow.ts","/**\r\n * 2018年3月26日 星期一\r\n * 并行\r\n */\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nexport default class NodeParallel extends NodeAbstract{\r\n    xRate: number   // 偏移量\r\n    inlineEle: RaphaelElement\r\n    protected _onInit(){\r\n        this.NodeType = 'parallel'\r\n        this.xRate = 0.20\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var attrs = this.opt2Attr(),\r\n            opt = this.opt,\r\n            {bkg} = opt\r\n\r\n        this.c = this.paper.path(this._ps2Path(attrs.cAttr, true))\r\n        this.c.attr('fill', bkg)\r\n        this.inlineEle = this.paper.path(this._ps2Path(attrs.inLine))\r\n    }\r\n    /**\r\n     * 通过选项映射到节点属性\r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        var opt = nOpt? nOpt : this.opt,\r\n            x = opt.cx - opt.w/2,\r\n            y = opt.cy - opt.h/2,\r\n            w = opt.w,\r\n            h = opt.h,\r\n            xRate = this.xRate,\r\n            rW = w * (1 - xRate * 2)            // 内矩形宽度\r\n\r\n        return {\r\n            cAttr: [\r\n                {   // A\r\n                    x: x - rW/2 , y: y - h/2\r\n                },\r\n                {   // B\r\n                    x: x + rW/2 , y: y - h/2\r\n                },\r\n                {   // C\r\n                    x: x + w/2 , y: y\r\n                },\r\n                {   // D\r\n                    x: x + rW/2 , y: y + h/2\r\n                },\r\n                {   // E\r\n                    x: x - rW/2 , y: y + h/2\r\n                },\r\n                {   // F\r\n                    x: x - w/2 , y: y\r\n                }\r\n            ],\r\n            inLine: [\r\n                {x: x - rW/2 - rW * 0.1, y: y},\r\n                {x: x + rW/2 + rW * 0.1, y: y}\r\n            ]\r\n        }            \r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var {cAttr, inLine} = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(cAttr, true))\r\n        this.inlineEle.attr('path', this._ps2PathAttr(inLine))\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeParallel.ts","/**\r\n * 2018年3月26日 星期一\r\n * 合并\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nexport default class NodeMerge extends NodeAbstract{\r\n    xRate: number   // 偏移量\r\n    inlinesEle: RaphaelElement[]\r\n    protected _onInit(){\r\n        this.NodeType = 'merge'\r\n        this.xRate = 0.20        \r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#88EEEA'\r\n        var attrs = this.opt2Attr(),\r\n            opt = this.opt,\r\n            {bkg} = opt\r\n        this.c = this.paper.path(this._ps2Path(attrs.cAttr, true))\r\n        this.c.attr('fill', bkg)\r\n        this.inlinesEle = [\r\n            this.paper.path(this._ps2Path(attrs.vLine)),\r\n            this.paper.path(this._ps2Path(attrs.hLine))\r\n        ]\r\n    }\r\n    /**\r\n     * 通过选项映射到节点属性\r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        var opt = nOpt? nOpt : this.opt,\r\n            x = opt.cx - opt.w/2,\r\n            y = opt.cy - opt.h/2,\r\n            w = opt.w,\r\n            h = opt.h,\r\n            xRate = this.xRate,\r\n            rW = w * (1 - xRate * 2)            // 内矩形宽度\r\n\r\n        return {\r\n            cAttr: [\r\n                {   // A\r\n                    x: x - rW/2 , y: y - h/2\r\n                },\r\n                {   // B\r\n                    x: x + rW/2 , y: y - h/2\r\n                },\r\n                {   // C\r\n                    x: x + w/2 , y: y\r\n                },\r\n                {   // D\r\n                    x: x + rW/2 , y: y + h/2\r\n                },\r\n                {   // E\r\n                    x: x - rW/2 , y: y + h/2\r\n                },\r\n                {   // F\r\n                    x: x - w/2 , y: y\r\n                }\r\n            ],\r\n            vLine: [    // 竖线\r\n                {x: x, y: y  - h/2 * 0.80},\r\n                {x: x, y: y  + h/2 * 0.80}\r\n            ],\r\n            hLine: [    // 水平线\r\n                {x: x - rW/2 - rW * 0.1, y: y},\r\n                {x: x + rW/2 + rW * 0.1, y: y}\r\n            ]\r\n        }            \r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        var {cAttr, vLine, hLine} = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(cAttr, true))\r\n        this.inlinesEle[0].attr('path', this._ps2PathAttr(vLine))\r\n        this.inlinesEle[1].attr('path', this._ps2PathAttr(hLine))\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeMerge.ts","\r\n/**\r\n * 2018年3月26日 星期一\r\n * 结束\r\n */\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nexport default class NodeEnd extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'end'\r\n    }\r\n    /**\r\n     * 生成器处理事件\r\n     */\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || '#2EF25F'\r\n        var opt = this.opt\r\n        this.c = this.paper.ellipse(opt.cx, opt.cy, opt.w/2, opt.h/2)\r\n        this.c.attr('fill', this.opt.bkg)\r\n        // 文字\r\n        if(opt.text){\r\n            let {x, y} = this._getTextPnt()\r\n            this.label = this.paper.text(x, y, opt.text)\r\n        }\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        var opt = this._updAttr(nOpt)\r\n            .opt\r\n        this.c.attr({\r\n            cx: opt.cx,\r\n            cy: opt.cy,\r\n            rx: opt.w/2,\r\n            ry: opt.h/2\r\n        })\r\n        this.updTextAttr(nOpt.text)  // 文字\r\n        this.onSize()\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeEnd.ts","/**\r\n * 2018年3月26日 星期一\r\n * 直线\r\n */\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nimport { Util } from \"../util\";\r\nexport default class NodeLn extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'ln'\r\n        // 箭头最大长度\r\n        this.data('maxR', 5)\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || 'rgb(3, 84, 41)'\r\n        var opt = this.opt,\r\n            {bkg} = opt\r\n        this.c = this.paper.path(this._ps2Path(this.opt2Attr()))\r\n            .attr('stroke-width', '2px')\r\n            .attr('fill', this.opt.bkg)\r\n            .attr('stroke', this.opt.bkg)\r\n    }\r\n    /**\r\n     * 生成器 nOpt: {P1: rSu.P, P2: rSu.P, r?: number}\r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        var opt = nOpt? nOpt : this.opt,\r\n            P1: rSu.P = opt.P1,\r\n            P2: rSu.P = opt.P2,\r\n            r = opt.r || this.getLen() * 0.2,\r\n            maxR = this.data('maxR')\r\n        \r\n        if(r > maxR){\r\n            r = maxR\r\n        }\r\n        \r\n        var atan = Math.atan2(P1.y - P2.y, P2.x - P1.x) * (180 / Math.PI);\r\n\r\n        var centerX = P2.x - r * Math.cos(atan * (Math.PI / 180));\r\n        var centerY = P2.y + r * Math.sin(atan * (Math.PI / 180));\r\n\r\n        var x2 = centerX + r * Math.cos((atan + 120) * (Math.PI / 180));\r\n        var y2 = centerY - r * Math.sin((atan + 120) * (Math.PI / 180));\r\n\r\n        var x3 = centerX + r * Math.cos((atan + 240) * (Math.PI / 180));\r\n        var y3 = centerY - r * Math.sin((atan + 240) * (Math.PI / 180));\r\n\r\n        return [\r\n            P1,\r\n            P2,\r\n            {x: x2, y: y2},\r\n            {x: x3, y: y3},\r\n            P2\r\n        ]\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        this.c.attr('path', this._ps2PathAttr(this.opt2Attr()))\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 获取两点间的距离\r\n     */\r\n    getLen(nOpt?: rSu.NodeOpt): number{\r\n        var opt = nOpt? nOpt : this.opt,\r\n            P1: rSu.P = opt.P1,\r\n            P2: rSu.P = opt.P2\r\n        return this.getPLen(P1, P2)\r\n    }\r\n    /**\r\n     * 特殊的连接方式\r\n     */\r\n    select(): rSu.Node{\r\n        let fP = this.getFocusPoint()\r\n        this.removeBox()\r\n        this.isSelEd = true\r\n        Util.each(fP, (k: string, p: rSu.P) => {\r\n            let tPIst = this.paper.circle(p.x, p.y, 3)\r\n                .attr('fill', this.feature('focusPBkg', null, '#990000'))    \r\n                .data('pcode', this.code)\r\n                .data('posi', k)                                        \r\n            this.tRElem['__p' + k] = tPIst\r\n            this.onCreateBoxPnt(this.tRElem['__p' + k])\r\n        })\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 获取聚焦点\r\n     * f/m/t\r\n     */\r\n    getFocusPoint(){\r\n        let {P1, P2} = this.opt,\r\n            len = this.getPLen(P1, P2),\r\n            tP = this.c.getPointAtLength(len/2)\r\n        return {\r\n            f: P1,\r\n            m: {x: tP.x, y: tP.y},\r\n            t: P2\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeLn.ts","/**\r\n * 2018年3月26日 星期一\r\n * 折线\r\n */\r\nimport NodeAbstract from \"./NodeAbstract\"\r\nimport NodeUtil from \"./NodeUtil\";\r\nimport { Util } from \"../util\";\r\nexport default class NodeLnPoly extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'ln_poly'\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        this.opt.bkg = this.opt.bkg || 'rgb(3, 84, 41)'\r\n        let opt = this.opt,\r\n            {bkg} = opt,\r\n            {pQue, arrowPs} = this.opt2Attr()\r\n        let sWd: string = '2px'\r\n        this.c = this.paper.path(this._ps2Path(pQue))\r\n            .attr('stroke-width', sWd)\r\n            .attr('stroke', this.opt.bkg)\r\n        // console.log(pQue, arrowPs)\r\n        this.inlineEle = this.paper.path(this._ps2Path(Util.jsonValues(arrowPs)))\r\n        this.inlineEle\r\n            .attr('fill', this.opt.bkg)\r\n            .attr('stroke', this.opt.bkg)\r\n            .attr('stroke-width', sWd)\r\n    }\r\n    /**\r\n     * 选项转属性\r\n     * @param nOpt \r\n     */\r\n    opt2Attr(nOpt?: rSu.NodeOpt){\r\n        let pQue: rSu.P[] = []\r\n        let opt = nOpt? nOpt : this.opt,\r\n            {P1, P2} = opt,\r\n            l = this.getLen(),\r\n            rX = opt.rX || 0.35,\r\n            r = opt.r || (l * (1 - rX) * 0.2),\r\n            MPs: rSu.P[] = opt.MPs || []\r\n        pQue = [P1] // 起点\r\n        // 中间点计算\r\n        if(MPs.length > 0){ // 使用默认的点列\r\n            pQue = pQue.concat(MPs)\r\n        }else{\r\n            let x1 = P1.x, y1 = P1.y,\r\n                x2 = P2.x, y2 = P2.y\r\n            let delMps: rSu.P = this.getMiddP(P1, P2)\r\n            if(delMps){\r\n                MPs.push(delMps)\r\n                pQue.push(delMps)\r\n                this.opt.MPs = MPs\r\n            }\r\n        }\r\n        pQue.push(P2)   // 终点\r\n\r\n        // 箭头坐标\r\n        let arrowPs: rSu.bsMap = {}\r\n        if(pQue.length > 1){\r\n            let pQLen = pQue.length - 1\r\n            arrowPs = NodeUtil.ps2arrow(pQue[pQLen-1], pQue[pQLen], r)            \r\n        }\r\n\r\n        return {pQue, arrowPs}\r\n    }\r\n    /**\r\n     * 获取中间点\r\n     * @param P0 \r\n     * @param P1 \r\n     */\r\n    getMiddP(P0: rSu.P, P1: rSu.P): rSu.P{\r\n        let p: rSu.P\r\n        if(P0.x != P1.x && P0.y != P1.y){\r\n            p = {x: P0.x, y: P1.y}\r\n        }\r\n        return p\r\n    }\r\n    /**\r\n     * 获取两点间的距离\r\n     */\r\n    getLen(nOpt?: rSu.NodeOpt): number{\r\n        var opt = nOpt? nOpt : this.opt,\r\n            P1: rSu.P = opt.P1,\r\n            P2: rSu.P = opt.P2\r\n        return this.getPLen(P1, P2)\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        let {pQue, arrowPs} = this.opt2Attr()\r\n        this.c.attr('path', this._ps2PathAttr(pQue))\r\n        this.inlineEle.attr('path', this._ps2PathAttr(Util.jsonValues(arrowPs)))\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 特殊的连接方式\r\n     */\r\n    select(): rSu.Node{\r\n        let fP = this.getFocusPoint()\r\n        this.removeBox()\r\n        this.isSelEd = true\r\n        Util.each(fP, (k: string, p: rSu.P) => {\r\n            let tPIst = this.paper.circle(p.x, p.y, 3)\r\n                .attr('fill', this.feature('focusPBkg', null, '#990000'))    \r\n                .data('pcode', this.code)\r\n                .data('posi', k)                                        \r\n            this.tRElem['__p' + k] = tPIst\r\n            this.onCreateBoxPnt(this.tRElem['__p' + k])\r\n        })\r\n        return <rSu.Node>this\r\n    }\r\n    /**\r\n     * 获取聚焦点\r\n     * f/m/t\r\n     */\r\n    getFocusPoint(){\r\n        let {P1, P2} = this.opt,\r\n            MPs = this.opt.MPs || []\r\n        let psMap: rSu.pMap = {\r\n            f: P1\r\n        }\r\n        // 个数统计\r\n        let num: number = 0\r\n        Util.each(MPs, (k: number, p: rSu.P) => {\r\n            let kStr = 'm' + k\r\n            psMap[kStr] = p\r\n            num = k\r\n        })\r\n        psMap.t = P2\r\n        // 中间点        \r\n        let psValue: rSu.P[] = Util.jsonValues(psMap),\r\n            psCtt: number = psValue.length,  // 节点统计个数\r\n            fPsDick: rSu.pMap = {}  // 聚焦点坐标字典\r\n        let fIdx: number = -1   // 聚焦点索引\r\n        for(var i=0; i<psCtt-1; i++){\r\n            num += 1\r\n            let kStr = 'm' + num,\r\n                pV1 = psValue[i],\r\n                pV2 = psValue[i+1]\r\n            \r\n            fIdx += 1\r\n            fPsDick['f'+fIdx] = pV1            \r\n            fIdx += 1   // 中间点 ~ 中点坐标公式\r\n            fPsDick['f'+fIdx] = NodeUtil.middP(pV1, pV2)\r\n\r\n        }\r\n        fIdx += 1\r\n        fPsDick['f'+fIdx] = psValue[psCtt-1]\r\n        return fPsDick\r\n    }\r\n    /**\r\n     * 端点移动\r\n     */\r\n    mvEndPoint(p: rSu.P, isEnd?: boolean){\r\n        let tP: rSu.P\r\n        let pathArr = this.c.attr('path'),\r\n            opt = this.opt\r\n        if(isEnd){      // 终点\r\n            let pA0 = pathArr[pathArr.length - 2],\r\n            p0: rSu.P = {\r\n                x: pA0[1],\r\n                y: pA0[2]\r\n            }\r\n            tP = this.getMiddP(p0, opt.P2)\r\n            if(tP){\r\n                opt.MPs = opt.MPs? opt.MPs: []\r\n                if(opt.MPs.length > 0){\r\n                    opt.MPs[opt.MPs.length-1] = tP\r\n                }\r\n            }else{\r\n                opt.MPs = []\r\n            }\r\n            opt.P2 = p\r\n        }\r\n        else{       // 起点\r\n            let pA0 = pathArr[1],\r\n            p0: rSu.P = {\r\n                x: pA0[1],\r\n                y: pA0[2]\r\n            }\r\n            tP = this.getMiddP(opt.P1, p0)\r\n            if(tP){\r\n                opt.MPs = opt.MPs? opt.MPs: []\r\n                if(opt.MPs.length > 0){\r\n                    opt.MPs[0] = tP\r\n                }\r\n            }else{\r\n                opt.MPs = []\r\n            }\r\n            opt.P1 = p\r\n        }\r\n        this.updAttr(opt)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeLnPoly.ts","/**\r\n * 2018年4月19日 星期四\r\n * 文本节点\r\n */\r\n\r\nimport NodeAbstract from \"./NodeAbstract\";\r\nexport default class NodeText extends NodeAbstract{\r\n    protected _onInit(){\r\n        this.NodeType = 'text'\r\n    }\r\n    protected _whenCreatorEvt(){\r\n        let {opt} = this,\r\n            {cx, cy, text} = opt\r\n        this.c = this.paper.text(cx, cy, text)\r\n    }\r\n    /**\r\n     * 更新属性\r\n     * @param nOpt \r\n     */\r\n    updAttr(nOpt: rSu.NodeOpt): rSu.Node{\r\n        this._updAttr(nOpt)\r\n        let opt = this.opt\r\n        this.c.attr({\r\n            x: opt.cx,\r\n            y: opt.cy,\r\n            text: opt.text\r\n        })\r\n        return <rSu.Node>this\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node/NodeText.ts","/**\r\n * 2018年3月30日 星期五\r\n * Object 类型扩展类\r\n */\r\n\r\nexport default class ObjX{\r\n    protected jsonObj: rSu.bsMap\r\n    constructor(jsonObj: rSu.bsMap){\r\n        if('object' == typeof jsonObj && !(jsonObj instanceof Array)){\r\n            this.jsonObj = jsonObj\r\n        }else{\r\n            this.jsonObj = {}\r\n        }\r\n    }\r\n    /**\r\n     * 参数获取\r\n     * @param key \r\n     * @param def \r\n     */\r\n    get(key: any, def?:any): any{\r\n        if('undefined' != typeof this.jsonObj[key]){\r\n            return this.jsonObj[key]\r\n        }else{\r\n            return def\r\n        }\r\n    }\r\n    // 设置值\r\n    set(key: any, value: any): this{\r\n        this.jsonObj[key] = value\r\n        return this\r\n    }\r\n    // 获取值\r\n    static value(json: rSu.bsMap, key: any, def?: any): any{\r\n        if('object' == typeof json){\r\n            return 'undefined' == typeof json[key]? def : json[key]\r\n        }\r\n        return def\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ObjX.ts"],"sourceRoot":""}